{"ast":null,"code":"import { UPDATE_LOCATION, GET_ADMIN_INFO, GET_BOOKING_REQUEST, RESPONSE_BOOKING_REQUEST, CREATE_ROOM, UPDATE_ROOM } from '../actionTypes';\nimport axios from \"axios\";\nimport { setLoading } from \"./commonActions\"; //-----------------------------------------\n\nconst url = process.env.REACT_APP_API_URL;\nexport const getAdmin = (dispatch, token) => {\n  setLoading(dispatch, true);\n  axios(`${url}/admin/users/me`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(async response => {\n    await dispatch({\n      type: GET_ADMIN_INFO,\n      payload: {\n        user: response.data\n      }\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {});\n};\nexport const getBookingRequests = (dispatch, token) => {\n  setLoading(dispatch, true);\n  axios(`${url}/admin/bookings`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(async response => {\n    await dispatch({\n      type: GET_BOOKING_REQUEST,\n      payload: response.data.results\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {});\n};\nexport const responseBookingRequests = (dispatch, token, bookingId, status) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/admin/bookings/${bookingId}`, {\n    status\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(async response => {\n    setLoading(dispatch, false);\n    await dispatch({\n      type: RESPONSE_BOOKING_REQUEST,\n      payload: response.data.results\n    });\n  }).catch(error => {});\n}; //-----------------------------------------\n\nexport const updateLocation = (dispatch, token, locationData, locationId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"PUT\",\n    url: `${url}/admin/locations/${locationId}`,\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      name: locationData.name,\n      address: locationData.address,\n      city: locationData.city,\n      locationTypeId: locationData.locationTypeId,\n      contactPhoneNumber: locationData.contactPhoneNumber,\n      contactEmail: locationData.contactEmail,\n      price: locationData.price,\n      description: locationData.description,\n      workingTime: locationData.workingTime\n    }\n  }).then(async response => {\n    await dispatch({\n      type: UPDATE_LOCATION,\n      payload: response.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, true);\n    console.log(error.message);\n  });\n};\nexport const createRoom = (dispatch, token, roomData) => {\n  setLoading(dispatch, true);\n  axios.post(`${url}/admin/room/create`, {\n    name: roomData.name,\n    price: roomData.price,\n    description: roomData.description,\n    capacity: roomData.capacity\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(async response => {\n    await dispatch({\n      type: CREATE_ROOM,\n      payload: response.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {});\n};\nexport const updateRoom = (dispatch, token, roomId, roomData) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/admin/room/${roomId}/update`, {\n    name: roomData.name,\n    price: roomData.price,\n    description: roomData.description,\n    capacity: roomData.capacity\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(async response => {\n    await dispatch({\n      type: UPDATE_ROOM,\n      payload: response.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {});\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/admin.action.js"],"names":["UPDATE_LOCATION","GET_ADMIN_INFO","GET_BOOKING_REQUEST","RESPONSE_BOOKING_REQUEST","CREATE_ROOM","UPDATE_ROOM","axios","setLoading","url","process","env","REACT_APP_API_URL","getAdmin","dispatch","token","headers","Authorization","then","response","type","payload","user","data","catch","error","getBookingRequests","results","responseBookingRequests","bookingId","status","put","updateLocation","locationData","locationId","method","name","address","city","locationTypeId","contactPhoneNumber","contactEmail","price","description","workingTime","console","log","message","createRoom","roomData","post","capacity","updateRoom","roomId"],"mappings":"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","sourcesContent":["import {\n    UPDATE_LOCATION,\n    GET_ADMIN_INFO,\n    GET_BOOKING_REQUEST,\n    RESPONSE_BOOKING_REQUEST,\n    CREATE_ROOM,\n    UPDATE_ROOM\n} from '../actionTypes'\nimport axios from \"axios\";\nimport {setLoading} from \"./commonActions\";\n\n//-----------------------------------------\nconst url = process.env.REACT_APP_API_URL;\n\nexport const getAdmin = (dispatch, token) => {\n    setLoading(dispatch, true);\n    axios(`${url}/admin/users/me`, {\n        headers: {Authorization: `Bearer ${token}`}\n    })\n        .then( async (response) => {\n            await dispatch({\n                type: GET_ADMIN_INFO,\n                payload: {\n                    user: response.data\n                }\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n        });\n};\n\nexport const getBookingRequests = (dispatch, token) => {\n    setLoading(dispatch, true);\n    axios(`${url}/admin/bookings`, {\n        headers: {Authorization: `Bearer ${token}`}\n    })\n        .then(async (response) => {\n            await dispatch({\n                type: GET_BOOKING_REQUEST,\n                payload: response.data.results\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n        });\n};\n\nexport const responseBookingRequests = (dispatch, token, bookingId, status) => {\n    setLoading(dispatch, true);\n    axios\n        .put(`${url}/admin/bookings/${bookingId}`,\n            {\n                status,\n            },\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n        .then(async (response) => {\n            setLoading(dispatch, false);\n            await dispatch({\n                type: RESPONSE_BOOKING_REQUEST,\n                payload: response.data.results\n            });\n        })\n        .catch((error) => {\n        });\n}\n\n//-----------------------------------------\n\nexport const updateLocation = (dispatch, token, locationData, locationId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"PUT\",\n        url: `${url}/admin/locations/${locationId}`,\n        headers: { Authorization: `Bearer ${token}` },\n        data: {\n            name: locationData.name,\n            address: locationData.address,\n            city: locationData.city,\n            locationTypeId: locationData.locationTypeId,\n            contactPhoneNumber: locationData.contactPhoneNumber,\n            contactEmail: locationData.contactEmail,\n            price: locationData.price,\n            description: locationData.description,\n            workingTime: locationData.workingTime,\n        }\n    })\n        .then(async (response) => {\n            await dispatch({\n                type: UPDATE_LOCATION,\n                payload: response.data\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n            setLoading(dispatch, true);\n            console.log(error.message)\n        });\n};\n\nexport const createRoom = (dispatch, token, roomData) => {\n    setLoading(dispatch, true);\n    axios\n        .post(`${url}/admin/room/create`,\n            {\n                name: roomData.name,\n                price: roomData.price,\n                description: roomData.description,\n                capacity: roomData.capacity,\n            },\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n        .then(async (response) => {\n            await dispatch({\n                type: CREATE_ROOM,\n                payload: response.data\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n        });\n}\n\nexport const updateRoom = (dispatch, token, roomId, roomData) => {\n    setLoading(dispatch, true);\n    axios\n        .put(`${url}/admin/room/${roomId}/update`,\n            {\n                name: roomData.name,\n                price: roomData.price,\n                description: roomData.description,\n                capacity: roomData.capacity,\n            },\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n        .then(async (response) => {\n            await dispatch({\n                type: UPDATE_ROOM,\n                payload: response.data\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n        });\n}\n"]},"metadata":{},"sourceType":"module"}