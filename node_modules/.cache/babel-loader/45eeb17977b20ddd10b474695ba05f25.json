{"ast":null,"code":"var _jsxFileName = \"/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/User/UserProfile/UserPersonalInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUserInfo } from \"../../../redux/actions/user.action\";\nimport { Modal, ModalFooter, ModalBody, ModalHeader } from \"reactstrap\";\nimport Title from \"../../Global/Title\";\nimport { Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nUserPersonalInfo.defaultProps = {\n  onSubmit: null,\n  user: null\n};\nUserPersonalInfo.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nfunction UserPersonalInfo(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [show, setShow] = useState(false);\n\n  const toggleShow = () => setShow(!show);\n\n  const initialValues = {\n    avatar: \"\",\n    fullName: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\"\n  };\n  const [userInfo, setUserInfo] = useState(initialValues);\n  const [image, setImage] = useState(null);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required').nullable(),\n    locationTypeId: Yup.string().required('Location type is required').nullable(),\n    city: Yup.string().required('City is required').nullable()\n  });\n  useEffect(() => {\n    setUserInfo({\n      fullName: props.user && props.user.fullName ? props.user.fullName : \"\",\n      phoneNumber: props.user && props.user.phoneNumber ? props.user.phoneNumber : \"\",\n      address: props.user && props.user.address ? props.user.address : \"\",\n      city: props.user && props.user.city ? props.user.city : \"\"\n    });\n  }, [props.user]); // eslint-disable-line\n\n  const onSubmitHandler = e => {\n    updateUserInfo(dispatch, state.auth.token, userInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleShow,\n      variant: \"dark\",\n      children: \"Change Personal Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      isOpen: show,\n      toggle: toggleShow,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Change your personal info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: validationSchema,\n          onSubmit: props.onSubmit,\n          children: formikProps => {\n            const {\n              values,\n              setValues,\n              isSubmitting\n            } = formikProps;\n            return /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: onSubmitHandler,\n              className: \"mx-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: props.user && props.user.image ? props.user.image : \"http://placehold.it/300x300?text=avatar\",\n                  alt: \"avatar\",\n                  className: \"w-32 h-32 rounded-full object-cover\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  \"aria-label\": \"upload image\",\n                  className: \"ml-5 px-5 py-2 text-gray-200 bg-orange-500 hover:bg-orange-900 rounded-sm cursor-pointer\",\n                  children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                    type: \"file\",\n                    name: \"\",\n                    id: \"\",\n                    className: \"hidden\",\n                    onChange: e => {\n                      setImage(e.target.files[0]);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fas fa-camera mr-2\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 103,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: image ? image.name : \"Upload\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"fullName\",\n                id: \"fullName\",\n                className: \"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\",\n                value: userInfo.fullName,\n                onChange: e => setUserInfo({ ...userInfo,\n                  first_name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"last_name\",\n                className: \"block mt-5\",\n                children: [\"Last Name:\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                id: \"last_name\",\n                name: \"last_name\",\n                className: \"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\",\n                value: userInfo.last_name,\n                onChange: e => setUserInfo({ ...userInfo,\n                  last_name: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"phone\",\n                className: \"block mt-5\",\n                children: [\"Phone:\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"tel\",\n                id: \"phone\",\n                name: \"phone\",\n                className: \"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\",\n                value: userInfo.phone,\n                onChange: e => setUserInfo({ ...userInfo,\n                  phone: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"address\",\n                className: \"block mt-5\",\n                children: [\"Address:\", \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"address\",\n                id: \"address\",\n                className: \"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\",\n                value: userInfo.address,\n                onChange: e => setUserInfo({ ...userInfo,\n                  address: e.target.value\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          onClick: toggleShow,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleShow,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPersonalInfo, \"uZDbOQFpBEBDcRtXEX3K30YdHnw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserPersonalInfo;\nexport default UserPersonalInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPersonalInfo\");","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/User/UserProfile/UserPersonalInfo.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","updateUserInfo","Modal","ModalFooter","ModalBody","ModalHeader","Title","Button","PropTypes","Yup","UserPersonalInfo","defaultProps","onSubmit","user","propTypes","func","isRequired","object","props","dispatch","state","show","setShow","toggleShow","initialValues","avatar","fullName","phoneNumber","address","city","userInfo","setUserInfo","image","setImage","validationSchema","shape","name","string","required","nullable","locationTypeId","onSubmitHandler","e","auth","token","formikProps","values","setValues","isSubmitting","target","files","first_name","value","last_name","phone"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateUserInfo} from \"../../../redux/actions/user.action\";\nimport {Modal, ModalFooter, ModalBody, ModalHeader} from \"reactstrap\"\nimport Title from \"../../Global/Title\";\nimport {Button} from \"antd\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from \"yup\";\n\nUserPersonalInfo.defaultProps = {\n    onSubmit: null,\n    user: null,\n}\n\nUserPersonalInfo.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n}\n\nfunction UserPersonalInfo(props) {\n    const dispatch = useDispatch();\n    const state = useSelector((state) => state);\n    const [show, setShow] = useState(false);\n    const toggleShow = () => setShow(!show);\n    const initialValues = {\n        avatar: \"\",\n        fullName: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n        city: \"\"\n    }\n\n    const [userInfo, setUserInfo] = useState(initialValues);\n    const [image, setImage] = useState(null);\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Name is required').nullable(),\n        locationTypeId: Yup.string().required('Location type is required').nullable(),\n        city: Yup.string().required('City is required').nullable(),\n    })\n\n    useEffect(() => {\n        setUserInfo({\n            fullName: props.user && props.user.fullName ? props.user.fullName : \"\",\n            phoneNumber: props.user && props.user.phoneNumber ? props.user.phoneNumber : \"\",\n            address: props.user && props.user.address ? props.user.address : \"\",\n            city: props.user && props.user.city ? props.user.city : \"\"\n        });\n    }, [props.user]); // eslint-disable-line\n\n    const onSubmitHandler = (e) => {\n        updateUserInfo(dispatch, state.auth.token, userInfo);\n    };\n    return (\n        <div>\n            <Button onClick={toggleShow} variant=\"dark\">Change Personal Information</Button>\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                isOpen={show} toggle={toggleShow}\n            >\n                <ModalHeader closeButton>\n                    <Title id=\"contained-modal-title-vcenter\">\n                        Change your personal info\n                    </Title>\n                </ModalHeader>\n                <ModalBody>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        onSubmit={props.onSubmit}\n                    >\n                        {formikProps => {\n                            const {values, setValues, isSubmitting} = formikProps;\n                            return (\n                                <form\n                                    onSubmit={onSubmitHandler}\n                                    className=\"mx-5\"\n                                >\n                                    <div className=\"flex items-center\">\n                                        <img\n                                            src={\n                                                props.user && props.user.image\n                                                    ? props.user.image\n                                                    : \"http://placehold.it/300x300?text=avatar\"\n                                            }\n                                            alt=\"avatar\"\n                                            className=\"w-32 h-32 rounded-full object-cover\"\n                                        />\n\n                                        <label aria-label=\"upload image\"\n                                               className=\"ml-5 px-5 py-2 text-gray-200 bg-orange-500 hover:bg-orange-900 rounded-sm cursor-pointer\">\n                                            <input\n                                                type=\"file\"\n                                                name=\"\"\n                                                id=\"\"\n                                                className=\"hidden\"\n                                                onChange={(e) => {\n                                                    setImage(e.target.files[0]);\n                                                }}\n                                            />\n                                            <i className=\"fas fa-camera mr-2\"/>\n                                            <span>{image ? image.name : \"Upload\"}</span>\n                                        </label>\n                                    </div>\n                                    <input\n                                        type=\"text\"\n                                        name=\"fullName\"\n                                        id=\"fullName\"\n                                        className=\"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\"\n                                        value={userInfo.fullName}\n                                        onChange={(e) =>\n                                            setUserInfo({...userInfo, first_name: e.target.value})\n                                        }\n                                    />\n\n                                    <label htmlFor=\"last_name\" className=\"block mt-5\">\n                                        Last Name:{\" \"}\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"last_name\"\n                                        name=\"last_name\"\n                                        className=\"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\"\n                                        value={userInfo.last_name}\n                                        onChange={(e) =>\n                                            setUserInfo({...userInfo, last_name: e.target.value})\n                                        }\n                                    />\n\n                                    <label htmlFor=\"phone\" className=\"block mt-5\">\n                                        Phone:{\" \"}\n                                    </label>\n                                    <input\n                                        type=\"tel\"\n                                        id=\"phone\"\n                                        name=\"phone\"\n                                        className=\"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\"\n                                        value={userInfo.phone}\n                                        onChange={(e) =>\n                                            setUserInfo({...userInfo, phone: e.target.value})\n                                        }\n                                    />\n\n                                    <label htmlFor=\"address\" className=\"block mt-5\">\n                                        Address:{\" \"}\n                                    </label>\n                                    <input\n                                        type=\"text\"\n                                        name=\"address\"\n                                        id=\"address\"\n                                        className=\"p-2 w-full xl:w-1/2 border border-gray-400 focus:outline-none focus:border-black\"\n                                        value={userInfo.address}\n                                        onChange={(e) =>\n                                            setUserInfo({...userInfo, address: e.target.value})\n                                        }\n                                    />\n                                </form>\n                            )\n                        }}\n                    </Formik>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        variant=\"dark\"\n                        type=\"submit\"\n                        onClick={toggleShow}\n                    >\n                        Update\n                    </Button>\n                    <Button onClick={toggleShow}>Close</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n\n    );\n}\n\nexport default UserPersonalInfo;\n"]},"metadata":{},"sourceType":"module"}