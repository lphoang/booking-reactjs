{"ast":null,"code":"import axios from \"axios\";\nimport { GET_HOTEL, GET_ALL_HOTELS, GET_PAGE_HOTELS, GET_CITY_HOTELS } from \"../actionTypes\";\nconst url = process.env.REACT_APP_API_URL;\nexport const getAllHotels = dispatch => async () => {\n  try {\n    const response = await axios.get(`${url}/customer/locations`, {\n      params: {\n        \"sort\": 'score,DESC',\n        \"join\": ['locationType', 'city', 'rooms', 'serviceTypes']\n      }\n    });\n    dispatch({\n      type: GET_ALL_HOTELS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; //-----------------------------------------\n\nexport const getPageHotels = dispatch => {\n  return async page => {\n    try {\n      const response = await axios.get(`${url}/customer/locations`, {\n        params: {\n          \"page\": `${page}`,\n          \"sort\": 'score,DESC',\n          \"join\": ['locationType', 'city', 'rooms', 'serviceTypes']\n        }\n      });\n      dispatch({\n        type: GET_PAGE_HOTELS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}; //-----------------------------------------\n\nexport const getHotel = dispatch => {\n  return async id => {\n    try {\n      const response = await axios.get(`${url}/customer/locations/${id}`, {\n        params: {\n          join: ['locationType', 'city', 'rooms', 'serviceTypes']\n        }\n      });\n      dispatch({\n        type: GET_HOTEL,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}; //-----------------------------------------\n\nexport const getCityHotels = async dispatch => {\n  return async (cityId, page) => {\n    try {\n      const response = await axios.get(`${url}/customer/locations`, {\n        params: {\n          page: `${page}`,\n          join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n          sort: 'score,DESC',\n          filter: `cityId||$eq||${cityId}`\n        }\n      });\n      dispatch({\n        type: GET_CITY_HOTELS,\n        payload: response.data\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/hotel.action.js"],"names":["axios","GET_HOTEL","GET_ALL_HOTELS","GET_PAGE_HOTELS","GET_CITY_HOTELS","url","process","env","REACT_APP_API_URL","getAllHotels","dispatch","response","get","params","type","payload","data","error","console","log","getPageHotels","page","getHotel","id","join","getCityHotels","cityId","sort","filter"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    GET_HOTEL,\n    GET_ALL_HOTELS,\n    GET_PAGE_HOTELS,\n    GET_CITY_HOTELS,\n} from \"../actionTypes\";\n\nconst url = process.env.REACT_APP_API_URL;\nexport const getAllHotels = (dispatch) =>\n    async () => {\n        try {\n            const response = await axios.get(`${url}/customer/locations`, {\n                params: {\n                    \"sort\": 'score,DESC',\n                    \"join\": ['locationType', 'city', 'rooms', 'serviceTypes'],\n                }\n            });\n            dispatch({\n                type: GET_ALL_HOTELS,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    };\n//-----------------------------------------\nexport const getPageHotels = (dispatch) => {\n    return async (page) => {\n        try {\n            const response = await axios.get(`${url}/customer/locations`, {\n                params: {\n                    \"page\": `${page}`,\n                    \"sort\": 'score,DESC',\n                    \"join\": ['locationType', 'city', 'rooms', 'serviceTypes'],\n                }\n            });\n            dispatch({\n                type: GET_PAGE_HOTELS,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\n//-----------------------------------------\n\nexport const getHotel = (dispatch) => {\n    return async (id) => {\n        try {\n            const response = await axios.get(`${url}/customer/locations/${id}`, {\n                params: {\n                    join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n                }\n            });\n            dispatch({\n                type: GET_HOTEL,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\n\n\n//-----------------------------------------\n\nexport const getCityHotels = async (dispatch) => {\n    return async (cityId, page) => {\n        try {\n            const response = await axios.get(`${url}/customer/locations`, {\n                params: {\n                    page: `${page}`,\n                    join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n                    sort: 'score,DESC',\n                    filter: `cityId||$eq||${cityId}`\n                }\n            });\n            dispatch({\n                type: GET_CITY_HOTELS,\n                payload: response.data\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}