{"ast":null,"code":"/* eslint-disable eqeqeq */\nimport { SIGN_UP, SIGN_IN, CHECK_AUTH, ADMIN_LOGIN } from \"../actionTypes\";\nimport { setLoading } from \"./commonActions\";\nimport axios from \"axios\"; //-----------------------------------------\n\nconst url = process.env.REACT_APP_API_URL;\nexport const signUp = (dispatch, user, setToken, setUserId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/customer/auth/sign-up`,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      fullName: user.fullName,\n      email: user.email,\n      address: user.address,\n      city: user.city,\n      password: user.password\n    }\n  }).then(response => {\n    setToken(response.data.success ? response.data.accessToken : null);\n    setUserId(response.data.success ? response.data.user.id : null);\n    dispatch({\n      type: SIGN_UP,\n      payload: {\n        user: response.data.user,\n        success: response.data.success\n      }\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n    dispatch({\n      type: SIGN_UP,\n      payload: {\n        errors: error.response.data.message\n      }\n    });\n  });\n}; //-----------------------------------------\n\nexport const signIn = (dispatch, user, setToken, setUserId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/customer/auth/sign-in`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  }).then(response => {\n    setToken(response.data.success ? response.data.accessToken : null);\n    setUserId(response.data.success ? response.data.user.id : null);\n    localStorage.setItem(\"first_login\", true);\n    dispatch({\n      type: SIGN_IN,\n      payload: {\n        user: response.data.user,\n        success: response.data.success\n      }\n    });\n    setLoading(dispatch, false);\n  }).catch(e => {\n    dispatch({\n      type: SIGN_IN,\n      payload: {\n        errors: e.response.data.message\n      }\n    });\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport let checkAuth;\n\ncheckAuth = (dispatch, _token, userId) => {\n  let token = _token;\n  let user_id = userId;\n  token != null && token !== \"null\" && token !== \"\" // eslint-disable-line\n  ? dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: true,\n      user_id,\n      token\n    }\n  }) : dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: false,\n      user_id: null,\n      token: null\n    }\n  });\n}; //-----------------------------------------\n\n\nexport const adminLogin = (dispatch, user, setToken, setUserId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/admin/auth/sign-in`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  }).then(response => {\n    setToken(response.data.success ? response.data.accessToken : null);\n    setUserId(response.data.success ? response.data.user.id : null);\n    dispatch({\n      type: ADMIN_LOGIN,\n      payload: {\n        user: response.data.user,\n        success: response.data.success\n      }\n    });\n    console.log(response.data);\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, false);\n    dispatch({\n      type: ADMIN_LOGIN,\n      payload: {\n        errors: error.response.data.message\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/auth.action.js"],"names":["SIGN_UP","SIGN_IN","CHECK_AUTH","ADMIN_LOGIN","setLoading","axios","url","process","env","REACT_APP_API_URL","signUp","dispatch","user","setToken","setUserId","method","headers","data","fullName","email","address","city","password","then","response","success","accessToken","id","type","payload","catch","error","errors","message","signIn","localStorage","setItem","e","checkAuth","_token","userId","token","user_id","isAuthenticated","adminLogin","console","log"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\nimport { SIGN_UP, SIGN_IN, CHECK_AUTH, ADMIN_LOGIN } from \"../actionTypes\";\nimport { setLoading } from \"./commonActions\";\nimport axios from \"axios\";\n\n//-----------------------------------------\nconst url = process.env.REACT_APP_API_URL;\n\nexport const signUp = (dispatch, user, setToken, setUserId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/customer/auth/sign-up`,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            fullName: user.fullName,\n            email: user.email,\n            address: user.address,\n            city: user.city,\n            password: user.password,\n        }\n    })\n        .then((response) => {\n            setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n            dispatch({\n                type: SIGN_UP,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                }\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n            setLoading(dispatch, false);\n            dispatch({\n                type: SIGN_UP,\n                payload: {\n                    errors: error.response.data.message\n                }\n            });\n        });\n};\n//-----------------------------------------\n\nexport const signIn = (dispatch, user, setToken, setUserId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/customer/auth/sign-in`,\n        headers: {\n            \"Content-Type\": \" application/json\"\n        },\n        data: {\n            email: user.email,\n            password: user.password\n        }\n    })\n        .then((response) => {\n            setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n            localStorage.setItem(\"first_login\", true);\n\n            dispatch({\n                type: SIGN_IN,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                }\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((e) => {\n            dispatch({\n                type: SIGN_IN,\n                payload: {\n                    errors: e.response.data.message\n                }\n            });\n            setLoading(dispatch, false);\n        });\n};\n//-----------------------------------------\n\nexport let checkAuth;\n    checkAuth = (dispatch, _token, userId) => {\n    let token = _token;\n    let user_id = userId;\n    token != null && token !== \"null\" && token !== \"\" // eslint-disable-line\n        ? dispatch({\n              type: CHECK_AUTH,\n              payload: {\n                  isAuthenticated: true,\n                  user_id,\n                  token,\n              }\n          })\n        : dispatch({\n              type: CHECK_AUTH,\n              payload: {\n                  isAuthenticated: false,\n                  user_id: null,\n                  token: null,\n              }\n          });\n};\n\n//-----------------------------------------\n\nexport const adminLogin = (dispatch, user, setToken, setUserId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/admin/auth/sign-in`,\n        headers: {\n            \"Content-Type\": \" application/json\"\n        },\n        data: {\n            email: user.email,\n            password: user.password\n        }\n    })\n        .then((response) => {\n            setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n\n            dispatch({\n                type: ADMIN_LOGIN,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                }\n            });\n            console.log(response.data);\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n            setLoading(dispatch, false);\n            dispatch({\n                type: ADMIN_LOGIN,\n                payload: {\n                    errors: error.response.data.message\n                }\n            });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}