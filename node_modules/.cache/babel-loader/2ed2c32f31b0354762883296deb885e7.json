{"ast":null,"code":"/* eslint-disable eqeqeq */\nimport { SADMIN_SIGN_IN, SADMIN_CHECK_AUTH } from '../actionTypes';\nimport { setLoading } from \"./commonActions\";\nimport axios from \"axios\"; //-----------------------------------------\n\nconst url = process.env.REACT_APP_API_URL;\nexport const signIn = (dispatch, user, setToken, setUserId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/super-admin/auth/sign-in`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  }).then(response => {\n    setToken(response.data.success ? response.data.accessToken : null);\n    setUserId(response.data.success ? response.data.user.id : null);\n    dispatch({\n      type: SADMIN_SIGN_IN,\n      payload: {\n        user: response.data.user,\n        success: response.data.success,\n        errors: response.data.errors\n      }\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    console.log(error);\n  });\n}; //-----------------------------------------\n\nexport let checkAuth;\n\ncheckAuth = (dispatch, _token, _user_id) => {\n  let token = _token;\n  let user_id = _user_id;\n  token != null && token !== \"null\" && token !== \"\" ? dispatch({\n    type: SADMIN_CHECK_AUTH,\n    payload: {\n      isAuthenticated: true,\n      user_id,\n      token\n    }\n  }) : dispatch({\n    type: SADMIN_CHECK_AUTH,\n    payload: {\n      isAuthenticated: false,\n      user_id: null,\n      token: null\n    }\n  });\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/sAdmin.action.js"],"names":["SADMIN_SIGN_IN","SADMIN_CHECK_AUTH","setLoading","axios","url","process","env","REACT_APP_API_URL","signIn","dispatch","user","setToken","setUserId","method","headers","data","email","password","then","response","success","accessToken","id","type","payload","errors","catch","error","console","log","checkAuth","_token","_user_id","token","user_id","isAuthenticated"],"mappings":"AAAA;AACA,SAASA,cAAT,EAAyBC,iBAAzB,QAAkD,gBAAlD;AACA,SAASC,UAAT,QAA2B,iBAA3B;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB;AAEA,OAAO,MAAMC,MAAM,GAAG,CAACC,QAAD,EAAWC,IAAX,EAAiBC,QAAjB,EAA2BC,SAA3B,KAAyC;AAC3DV,EAAAA,UAAU,CAACO,QAAD,EAAW,IAAX,CAAV;AACAN,EAAAA,KAAK,CAAC;AACFU,IAAAA,MAAM,EAAE,MADN;AAEFT,IAAAA,GAAG,EAAG,GAAEA,GAAI,2BAFV;AAGFU,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX,KAHP;AAMFC,IAAAA,IAAI,EAAE;AACFC,MAAAA,KAAK,EAAEN,IAAI,CAACM,KADV;AAEFC,MAAAA,QAAQ,EAAEP,IAAI,CAACO;AAFb;AANJ,GAAD,CAAL,CAWKC,IAXL,CAWWC,QAAD,IAAc;AAChBR,IAAAA,QAAQ,CACJQ,QAAQ,CAACJ,IAAT,CAAcK,OAAd,GAAwBD,QAAQ,CAACJ,IAAT,CAAcM,WAAtC,GAAoD,IADhD,CAAR;AAGAT,IAAAA,SAAS,CACLO,QAAQ,CAACJ,IAAT,CAAcK,OAAd,GAAwBD,QAAQ,CAACJ,IAAT,CAAcL,IAAd,CAAmBY,EAA3C,GAAgD,IAD3C,CAAT;AAIAb,IAAAA,QAAQ,CAAC;AACLc,MAAAA,IAAI,EAAEvB,cADD;AAELwB,MAAAA,OAAO,EAAE;AACLd,QAAAA,IAAI,EAAES,QAAQ,CAACJ,IAAT,CAAcL,IADf;AAELU,QAAAA,OAAO,EAAED,QAAQ,CAACJ,IAAT,CAAcK,OAFlB;AAGLK,QAAAA,MAAM,EAAEN,QAAQ,CAACJ,IAAT,CAAcU;AAHjB;AAFJ,KAAD,CAAR;AAQAvB,IAAAA,UAAU,CAACO,QAAD,EAAW,KAAX,CAAV;AACH,GA5BL,EA6BKiB,KA7BL,CA6BYC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GA/BL;AAgCH,CAlCM,C,CAmCP;;AAEA,OAAO,IAAIG,SAAJ;;AACPA,SAAS,GAAG,CAACrB,QAAD,EAAWsB,MAAX,EAAmBC,QAAnB,KAAgC;AACxC,MAAIC,KAAK,GAAGF,MAAZ;AACA,MAAIG,OAAO,GAAGF,QAAd;AACAC,EAAAA,KAAK,IAAI,IAAT,IAAiBA,KAAK,KAAK,MAA3B,IAAqCA,KAAK,KAAK,EAA/C,GACMxB,QAAQ,CAAC;AACPc,IAAAA,IAAI,EAAEtB,iBADC;AAEPuB,IAAAA,OAAO,EAAE;AACLW,MAAAA,eAAe,EAAE,IADZ;AAELD,MAAAA,OAFK;AAGLD,MAAAA;AAHK;AAFF,GAAD,CADd,GASMxB,QAAQ,CAAC;AACPc,IAAAA,IAAI,EAAEtB,iBADC;AAEPuB,IAAAA,OAAO,EAAE;AACLW,MAAAA,eAAe,EAAE,KADZ;AAELD,MAAAA,OAAO,EAAE,IAFJ;AAGLD,MAAAA,KAAK,EAAE;AAHF;AAFF,GAAD,CATd;AAiBH,CApBD","sourcesContent":["/* eslint-disable eqeqeq */\nimport { SADMIN_SIGN_IN, SADMIN_CHECK_AUTH } from '../actionTypes'\nimport { setLoading } from \"./commonActions\";\nimport axios from \"axios\";\n\n//-----------------------------------------\nconst url = process.env.REACT_APP_API_URL;\n\nexport const signIn = (dispatch, user, setToken, setUserId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/super-admin/auth/sign-in`,\n        headers: {\n            \"Content-Type\": \" application/json\"\n        },\n        data: {\n            email: user.email,\n            password: user.password\n        }\n    })\n        .then((response) => {\n            setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n\n            dispatch({\n                type: SADMIN_SIGN_IN,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                    errors: response.data.errors,\n                }\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n//-----------------------------------------\n\nexport let checkAuth;\ncheckAuth = (dispatch, _token, _user_id) => {\n    let token = _token;\n    let user_id = _user_id;\n    token != null && token !== \"null\" && token !== \"\"\n        ? dispatch({\n            type: SADMIN_CHECK_AUTH,\n            payload: {\n                isAuthenticated: true,\n                user_id,\n                token,\n            }\n        })\n        : dispatch({\n            type: SADMIN_CHECK_AUTH,\n            payload: {\n                isAuthenticated: false,\n                user_id: null,\n                token: null,\n            }\n        });\n};\n"]},"metadata":{},"sourceType":"module"}