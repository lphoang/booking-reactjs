{"ast":null,"code":"import axios from \"axios\";\nimport { GET_HOTEL, GET_ALL_HOTELS, GET_CITY_HOTELS } from \"../actionTypes\";\nconst url = process.env.REACT_APP_API_URL; //-----------------------------------------\n\nexport const getAllHotels = async (dispatch, page) => {\n  try {\n    const response = await axios.get(`${url}/customer/locations`, {\n      params: {\n        page: `${page}`,\n        sort: 'score,DESC',\n        join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n        filter: 'isFeatured'\n      }\n    });\n    dispatch({\n      type: GET_ALL_HOTELS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; //-----------------------------------------\n\nexport const getHotel = async (dispatch, id) => {\n  try {\n    const response = await axios.get(`${url}/customer/locations/${id}`, {\n      params: {\n        join: ['locationType', 'city', 'rooms', 'serviceTypes']\n      }\n    });\n    dispatch({\n      type: GET_HOTEL,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; //-----------------------------------------\n\nexport const getCityHotels = async (dispatch, cityId) => {\n  try {\n    const response = await axios.get(`${url}/customer/locations`, {\n      params: {\n        join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n        sort: 'score,DESC',\n        filter: `cityId||$eq||${cityId}`\n      }\n    });\n    dispatch({\n      type: GET_CITY_HOTELS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/hotel.action.js"],"names":["axios","GET_HOTEL","GET_ALL_HOTELS","GET_CITY_HOTELS","url","process","env","REACT_APP_API_URL","getAllHotels","dispatch","page","response","get","params","sort","join","filter","type","payload","data","error","console","log","getHotel","id","getCityHotels","cityId"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,SADJ,EAEIC,cAFJ,EAGIC,eAHJ,QAIO,gBAJP;AAMA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB,C,CACA;;AACA,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAClD,MAAG;AACC,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAER,GAAI,qBAAjB,EAAsC;AACzDS,MAAAA,MAAM,EAAE;AACJH,QAAAA,IAAI,EAAG,GAAEA,IAAK,EADV;AAEJI,QAAAA,IAAI,EAAE,YAFF;AAGJC,QAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,cAAlC,CAHF;AAIJC,QAAAA,MAAM,EAAE;AAJJ;AADiD,KAAtC,CAAvB;AAQAP,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEf,cADD;AAELgB,MAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAFb,KAAD,CAAR;AAIH,GAbD,CAaC,OAAMC,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAjBM,C,CAkBP;;AAEA,OAAO,MAAMG,QAAQ,GAAG,OAAOd,QAAP,EAAiBe,EAAjB,KAAwB;AAC5C,MAAG;AACC,UAAMb,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAER,GAAI,uBAAsBoB,EAAG,EAA1C,EAA6C;AAChEX,MAAAA,MAAM,EAAG;AACLE,QAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,cAAlC;AADD;AADuD,KAA7C,CAAvB;AAKAN,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEhB,SADD;AAELiB,MAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAFb,KAAD,CAAR;AAIH,GAVD,CAUC,OAAMC,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAdM,C,CAiBP;;AAEA,OAAO,MAAMK,aAAa,GAAG,OAAOhB,QAAP,EAAiBiB,MAAjB,KAA4B;AACrD,MAAG;AACC,UAAMf,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAER,GAAI,qBAAjB,EAAuC;AAC1DS,MAAAA,MAAM,EAAG;AACLE,QAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,cAAlC,CADD;AAELD,QAAAA,IAAI,EAAE,YAFD;AAGLE,QAAAA,MAAM,EAAG,gBAAeU,MAAO;AAH1B;AADiD,KAAvC,CAAvB;AAOAjB,IAAAA,QAAQ,CAAC;AACLQ,MAAAA,IAAI,EAAEd,eADD;AAELe,MAAAA,OAAO,EAAEP,QAAQ,CAACQ;AAFb,KAAD,CAAR;AAIH,GAZD,CAYC,OAAMC,KAAN,EAAY;AACTC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAhBM","sourcesContent":["import axios from \"axios\";\nimport {\n    GET_HOTEL,\n    GET_ALL_HOTELS,\n    GET_CITY_HOTELS,\n} from \"../actionTypes\";\n\nconst url = process.env.REACT_APP_API_URL;\n//-----------------------------------------\nexport const getAllHotels = async (dispatch, page) => {\n    try{\n        const response = await axios.get(`${url}/customer/locations`,{\n            params: {\n                page: `${page}`,\n                sort: 'score,DESC',\n                join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n                filter: 'isFeatured',\n            }\n        });\n        dispatch({\n            type: GET_ALL_HOTELS,\n            payload: response.data\n        })\n    }catch(error){\n        console.log(error)\n    }\n};\n//-----------------------------------------\n\nexport const getHotel = async (dispatch, id) => {\n    try{\n        const response = await axios.get(`${url}/customer/locations/${id}` ,{\n            params : {\n                join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n            }\n        });\n        dispatch({\n            type: GET_HOTEL,\n            payload: response.data\n        })\n    }catch(error){\n        console.log(error)\n    }\n};\n\n\n//-----------------------------------------\n\nexport const getCityHotels = async (dispatch, cityId) => {\n    try{\n        const response = await axios.get(`${url}/customer/locations` ,{\n            params : {\n                join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n                sort: 'score,DESC',\n                filter: `cityId||$eq||${cityId}`\n            }\n        });\n        dispatch({\n            type: GET_CITY_HOTELS,\n            payload: response.data\n        })\n    }catch(error){\n        console.log(error)\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}