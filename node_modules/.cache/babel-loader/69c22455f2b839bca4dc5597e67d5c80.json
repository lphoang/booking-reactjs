{"ast":null,"code":"import axios from \"axios\";\nimport { GET_HOTEL, GET_ALL_HOTELS, GET_CITY_HOTELS } from \"../actionTypes\";\nconst url = process.env.REACT_APP_API_URL; //-----------------------------------------\n\nexport const getAllHotels = async (dispatch, page) => {\n  try {\n    const response = await axios.get(`${url}/customer/locations`, {\n      params: {\n        \"page\": `${page}`,\n        \"sort\": 'score,DESC',\n        \"join\": ['locationType', 'city', 'rooms', 'serviceTypes'],\n        \"filter\": 'isFeatured||$eq||true'\n      }\n    });\n    dispatch({\n      type: GET_ALL_HOTELS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; //-----------------------------------------\n\nexport const getHotel = async (dispatch, id) => {\n  try {\n    const response = await axios.get(`${url}/customer/locations/${id}`, {\n      params: {\n        join: ['locationType', 'city', 'rooms', 'serviceTypes']\n      }\n    });\n    dispatch({\n      type: GET_HOTEL,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n}; //-----------------------------------------\n\nexport const getCityHotels = async (dispatch, cityId) => {\n  try {\n    const response = await axios.get(`${url}/customer/locations`, {\n      params: {\n        join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n        sort: 'score,DESC',\n        filter: `cityId||$eq||${cityId}`\n      }\n    });\n    dispatch({\n      type: GET_CITY_HOTELS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/hotel.action.js"],"names":["axios","GET_HOTEL","GET_ALL_HOTELS","GET_CITY_HOTELS","url","process","env","REACT_APP_API_URL","getAllHotels","dispatch","page","response","get","params","type","payload","data","error","console","log","getHotel","id","join","getCityHotels","cityId","sort","filter"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,SADJ,EAEIC,cAFJ,EAGIC,eAHJ,QAIO,gBAJP;AAMA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB,C,CACA;;AACA,OAAO,MAAMC,YAAY,GAAG,OAAOC,QAAP,EAAiBC,IAAjB,KAA0B;AAClD,MAAI;AACA,UAAMC,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAER,GAAI,qBAAjB,EAAuC;AAC1DS,MAAAA,MAAM,EAAE;AACJ,gBAAS,GAAEH,IAAK,EADZ;AAEJ,gBAAQ,YAFJ;AAGJ,gBAAQ,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,cAAlC,CAHJ;AAIJ,kBAAU;AAJN;AADkD,KAAvC,CAAvB;AAQAD,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEZ,cADD;AAELa,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFb,KAAD,CAAR;AAIH,GAbD,CAaE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAjBM,C,CAkBP;;AAEA,OAAO,MAAMG,QAAQ,GAAG,OAAOX,QAAP,EAAiBY,EAAjB,KAAwB;AAC5C,MAAI;AACA,UAAMV,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAER,GAAI,uBAAsBiB,EAAG,EAA1C,EAA6C;AAChER,MAAAA,MAAM,EAAE;AACJS,QAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,cAAlC;AADF;AADwD,KAA7C,CAAvB;AAKAb,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEb,SADD;AAELc,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFb,KAAD,CAAR;AAIH,GAVD,CAUE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAdM,C,CAiBP;;AAEA,OAAO,MAAMM,aAAa,GAAG,OAAOd,QAAP,EAAiBe,MAAjB,KAA4B;AACrD,MAAI;AACA,UAAMb,QAAQ,GAAG,MAAMX,KAAK,CAACY,GAAN,CAAW,GAAER,GAAI,qBAAjB,EAAuC;AAC1DS,MAAAA,MAAM,EAAE;AACJS,QAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,cAAlC,CADF;AAEJG,QAAAA,IAAI,EAAE,YAFF;AAGJC,QAAAA,MAAM,EAAG,gBAAeF,MAAO;AAH3B;AADkD,KAAvC,CAAvB;AAOAf,IAAAA,QAAQ,CAAC;AACLK,MAAAA,IAAI,EAAEX,eADD;AAELY,MAAAA,OAAO,EAAEJ,QAAQ,CAACK;AAFb,KAAD,CAAR;AAIH,GAZD,CAYE,OAAOC,KAAP,EAAc;AACZC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH;AACJ,CAhBM","sourcesContent":["import axios from \"axios\";\nimport {\n    GET_HOTEL,\n    GET_ALL_HOTELS,\n    GET_CITY_HOTELS,\n} from \"../actionTypes\";\n\nconst url = process.env.REACT_APP_API_URL;\n//-----------------------------------------\nexport const getAllHotels = async (dispatch, page) => {\n    try {\n        const response = await axios.get(`${url}/customer/locations`, {\n            params: {\n                \"page\": `${page}`,\n                \"sort\": 'score,DESC',\n                \"join\": ['locationType', 'city', 'rooms', 'serviceTypes'],\n                \"filter\": 'isFeatured||$eq||true',\n            }\n        });\n        dispatch({\n            type: GET_ALL_HOTELS,\n            payload: response.data\n        })\n    } catch (error) {\n        console.log(error)\n    }\n};\n//-----------------------------------------\n\nexport const getHotel = async (dispatch, id) => {\n    try {\n        const response = await axios.get(`${url}/customer/locations/${id}`, {\n            params: {\n                join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n            }\n        });\n        dispatch({\n            type: GET_HOTEL,\n            payload: response.data\n        })\n    } catch (error) {\n        console.log(error)\n    }\n};\n\n\n//-----------------------------------------\n\nexport const getCityHotels = async (dispatch, cityId) => {\n    try {\n        const response = await axios.get(`${url}/customer/locations`, {\n            params: {\n                join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n                sort: 'score,DESC',\n                filter: `cityId||$eq||${cityId}`\n            }\n        });\n        dispatch({\n            type: GET_CITY_HOTELS,\n            payload: response.data\n        })\n    } catch (error) {\n        console.log(error)\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}