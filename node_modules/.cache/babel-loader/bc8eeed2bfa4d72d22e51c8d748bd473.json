{"ast":null,"code":"import axios from \"axios\";\nimport { GET_HOTEL, GET_ALL_HOTELS, GET_PAGE_HOTELS, GET_CITY_HOTELS } from \"../actionTypes\";\nconst url = process.env.REACT_APP_API_URL;\nexport const getAllHotels = dispatch => {\n  axios.get(`${url}/customer/locations`, {\n    params: {\n      \"sort\": 'score,DESC',\n      \"join\": ['locationType', 'city', 'rooms', 'serviceTypes']\n    }\n  }).then(async response => {\n    await dispatch({\n      type: GET_ALL_HOTELS,\n      payload: response.data\n    });\n  }).catch(e => {\n    console.log(e);\n  });\n}; //-----------------------------------------\n\nexport const getPageHotels = (dispatch, page) => {\n  axios.get(`${url}/customer/locations`, {\n    params: {\n      \"page\": `${page}`,\n      \"sort\": 'score,DESC',\n      \"join\": ['locationType', 'city', 'rooms', 'serviceTypes']\n    }\n  }).then(async response => {\n    await dispatch({\n      type: GET_PAGE_HOTELS,\n      payload: response.data\n    });\n  }).catch(e => {\n    console.log(e);\n  });\n}; //-----------------------------------------\n\nexport const getHotel = async (dispatch, id) => {\n  axios.get(`${url}/customer/locations/${id}`, {\n    params: {\n      join: ['locationType', 'city', 'rooms', 'serviceTypes']\n    }\n  }).then(async response => {\n    await dispatch({\n      type: GET_HOTEL,\n      payload: response.data\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n}; //-----------------------------------------\n\nexport const getCityHotels = async (dispatch, cityId, page) => {\n  try {\n    const response = await axios.get(`${url}/customer/locations`, {\n      params: {\n        page: `${page}`,\n        join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n        sort: 'score,DESC',\n        filter: `cityId||$eq||${cityId}`\n      }\n    });\n    dispatch({\n      type: GET_CITY_HOTELS,\n      payload: response.data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/hotel.action.js"],"names":["axios","GET_HOTEL","GET_ALL_HOTELS","GET_PAGE_HOTELS","GET_CITY_HOTELS","url","process","env","REACT_APP_API_URL","getAllHotels","dispatch","get","params","then","response","type","payload","data","catch","e","console","log","getPageHotels","page","getHotel","id","join","error","getCityHotels","cityId","sort","filter"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    GET_HOTEL,\n    GET_ALL_HOTELS,\n    GET_PAGE_HOTELS,\n    GET_CITY_HOTELS,\n} from \"../actionTypes\";\n\nconst url = process.env.REACT_APP_API_URL;\nexport const getAllHotels = (dispatch) => {\n    axios.get(`${url}/customer/locations`, {\n        params: {\n            \"sort\": 'score,DESC',\n            \"join\": ['locationType', 'city', 'rooms', 'serviceTypes'],\n        }\n    }).then(async (response) => {\n        await dispatch({\n            type: GET_ALL_HOTELS,\n            payload: response.data\n        })\n    }).catch((e) => {\n        console.log(e)\n    })\n};\n//-----------------------------------------\nexport const getPageHotels = (dispatch, page) => {\n    axios.get(`${url}/customer/locations`, {\n        params: {\n            \"page\": `${page}`,\n            \"sort\": 'score,DESC',\n            \"join\": ['locationType', 'city', 'rooms', 'serviceTypes'],\n        }\n    }).then(async (response) => {\n        await dispatch({\n            type: GET_PAGE_HOTELS,\n            payload: response.data\n        })\n    }).catch((e) => {\n        console.log(e)\n    });\n};\n//-----------------------------------------\n\nexport const getHotel = async (dispatch, id) => {\n    \n    axios.get(`${url}/customer/locations/${id}`, {\n        params: {\n            join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n        }\n    }).then(async (response) => {\n        await dispatch({\n            type: GET_HOTEL,\n            payload: response.data\n        })\n    })\n        .catch((error) => {\n            console.log(error)\n        })\n};\n\n\n//-----------------------------------------\n\nexport const getCityHotels = async (dispatch, cityId, page) => {\n    try {\n        const response = await axios.get(`${url}/customer/locations`, {\n            params: {\n                page: `${page}`,\n                join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n                sort: 'score,DESC',\n                filter: `cityId||$eq||${cityId}`\n            }\n        });\n        dispatch({\n            type: GET_CITY_HOTELS,\n            payload: response.data\n        })\n    } catch (error) {\n        console.log(error)\n    }\n};\n\n"]},"metadata":{},"sourceType":"module"}