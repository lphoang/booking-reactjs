{"ast":null,"code":"var _jsxFileName = \"/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/User/UserProfile/UserPersonalInfo.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { updateUserInfo } from \"../../../redux/actions/user.action\";\nimport { Modal, ModalFooter, ModalBody, ModalHeader, FormGroup, Spinner } from \"reactstrap\";\nimport Title from \"../../Global/Title\";\nimport { Button } from \"antd\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from \"yup\";\nimport { Formik, FastField, Form } from \"formik\";\nimport InputField from \"../../../custom-fields/InputField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nUserPersonalInfo.defaultProps = {\n  onSubmit: null,\n  user: null\n};\nUserPersonalInfo.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired\n};\n\nfunction UserPersonalInfo(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const [show, setShow] = useState(false);\n\n  const toggleShow = () => setShow(!show);\n\n  const initialValues = {\n    avatar: \"\",\n    fullName: \"\",\n    phoneNumber: \"\",\n    address: \"\",\n    city: \"\"\n  };\n  const [userInfo, setUserInfo] = useState(initialValues);\n  const [image, setImage] = useState(null);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required').nullable(),\n    locationTypeId: Yup.string().required('Location type is required').nullable(),\n    city: Yup.string().required('City is required').nullable()\n  });\n  useEffect(() => {\n    setUserInfo({\n      fullName: props.user && props.user.fullName ? props.user.fullName : \"\",\n      phoneNumber: props.user && props.user.phoneNumber ? props.user.phoneNumber : \"\",\n      address: props.user && props.user.address ? props.user.address : \"\",\n      city: props.user && props.user.city ? props.user.city : \"\"\n    });\n  }, [props.user]); // eslint-disable-line\n\n  const onSubmitHandler = e => {\n    updateUserInfo(dispatch, state.auth.token, userInfo);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      onClick: toggleShow,\n      variant: \"dark\",\n      children: \"Change Personal Information\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      size: \"lg\",\n      \"aria-labelledby\": \"contained-modal-title-vcenter\",\n      centered: true,\n      isOpen: show,\n      toggle: toggleShow,\n      children: [/*#__PURE__*/_jsxDEV(ModalHeader, {\n        closeButton: true,\n        children: /*#__PURE__*/_jsxDEV(Title, {\n          id: \"contained-modal-title-vcenter\",\n          children: \"Change your personal info\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalBody, {\n        children: /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: initialValues,\n          validationSchema: validationSchema,\n          onSubmit: props.onSubmit,\n          children: formikProps => {\n            const {\n              values,\n              setValues,\n              isSubmitting\n            } = formikProps;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w-full xl:p-20 lg:p-16 md:p-3 sm:p-0 items-center min-h-screen bg-white\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-center\",\n                children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                  className: \"my-3 font-semibold font-serif text-gray-800 dark:text-gray-200\",\n                  children: \"Update Location Information\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-full xl:p-4 lg:p-5 md:p-1 items-center min-h-screen bg-white\",\n                \"data-aos\": \"fade-up\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"container mx-auto\",\n                  children: /*#__PURE__*/_jsxDEV(Form, {\n                    className: \"max-w-full mx-auto bg-gray-200 p-16 rounded-md shadow-sm\",\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex flex-col w-full\",\n                      children: [/*#__PURE__*/_jsxDEV(FastField, {\n                        name: \"name\",\n                        component: InputField,\n                        placeholder: \"Name\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 89,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"block w-full\",\n                        children: /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"inline-block w-2/3\",\n                          children: /*#__PURE__*/_jsxDEV(FastField, {\n                            name: \"address\",\n                            component: InputField,\n                            placeholder: \"Address\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 96,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"block w-full\",\n                        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"inline-block w-1/2\",\n                          children: /*#__PURE__*/_jsxDEV(FastField, {\n                            name: \"contactEmail\",\n                            component: InputField,\n                            placeholder: \"Email\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 105,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 104,\n                          columnNumber: 57\n                        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: \"inline-block w-1/2\",\n                          children: /*#__PURE__*/_jsxDEV(FastField, {\n                            name: \"contactPhoneNumber\",\n                            component: InputField,\n                            placeholder: \"Phone Number\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 112,\n                            columnNumber: 61\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 111,\n                          columnNumber: 57\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 53\n                      }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          type: \"submit\",\n                          className: \"w-full pt-1 text-white focus:outline-none\",\n                          color: \"primary\",\n                          onClick: () => {\n                            setValues({ ...values,\n                              locationTypeId: state.city.locationTypes[values.locationTypeId - 1].id\n                            });\n                          },\n                          children: [isSubmitting && /*#__PURE__*/_jsxDEV(Spinner, {\n                            size: \"sm\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 131,\n                            columnNumber: 78\n                          }, this), \"Update\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 120,\n                          columnNumber: 57\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalFooter, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"dark\",\n          type: \"submit\",\n          onClick: toggleShow,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: toggleShow,\n          children: \"Close\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserPersonalInfo, \"uZDbOQFpBEBDcRtXEX3K30YdHnw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = UserPersonalInfo;\nexport default UserPersonalInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserPersonalInfo\");","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/User/UserProfile/UserPersonalInfo.jsx"],"names":["React","useState","useEffect","useDispatch","useSelector","updateUserInfo","Modal","ModalFooter","ModalBody","ModalHeader","FormGroup","Spinner","Title","Button","PropTypes","Yup","Formik","FastField","Form","InputField","UserPersonalInfo","defaultProps","onSubmit","user","propTypes","func","isRequired","object","props","dispatch","state","show","setShow","toggleShow","initialValues","avatar","fullName","phoneNumber","address","city","userInfo","setUserInfo","image","setImage","validationSchema","shape","name","string","required","nullable","locationTypeId","onSubmitHandler","e","auth","token","formikProps","values","setValues","isSubmitting","locationTypes","id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {updateUserInfo} from \"../../../redux/actions/user.action\";\nimport {Modal, ModalFooter, ModalBody, ModalHeader, FormGroup, Spinner} from \"reactstrap\"\nimport Title from \"../../Global/Title\";\nimport {Button} from \"antd\";\nimport PropTypes from \"prop-types\";\nimport * as Yup from \"yup\";\nimport {Formik, FastField, Form} from \"formik\";\nimport InputField from \"../../../custom-fields/InputField\";\n\nUserPersonalInfo.defaultProps = {\n    onSubmit: null,\n    user: null,\n}\n\nUserPersonalInfo.propTypes = {\n    onSubmit: PropTypes.func.isRequired,\n    user: PropTypes.object.isRequired,\n}\n\nfunction UserPersonalInfo(props) {\n    const dispatch = useDispatch();\n    const state = useSelector((state) => state);\n    const [show, setShow] = useState(false);\n    const toggleShow = () => setShow(!show);\n    const initialValues = {\n        avatar: \"\",\n        fullName: \"\",\n        phoneNumber: \"\",\n        address: \"\",\n        city: \"\"\n    }\n\n    const [userInfo, setUserInfo] = useState(initialValues);\n    const [image, setImage] = useState(null);\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Name is required').nullable(),\n        locationTypeId: Yup.string().required('Location type is required').nullable(),\n        city: Yup.string().required('City is required').nullable(),\n    })\n\n    useEffect(() => {\n        setUserInfo({\n            fullName: props.user && props.user.fullName ? props.user.fullName : \"\",\n            phoneNumber: props.user && props.user.phoneNumber ? props.user.phoneNumber : \"\",\n            address: props.user && props.user.address ? props.user.address : \"\",\n            city: props.user && props.user.city ? props.user.city : \"\"\n        });\n    }, [props.user]); // eslint-disable-line\n\n    const onSubmitHandler = (e) => {\n        updateUserInfo(dispatch, state.auth.token, userInfo);\n    };\n    return (\n        <div>\n            <Button onClick={toggleShow} variant=\"dark\">Change Personal Information</Button>\n            <Modal\n                size=\"lg\"\n                aria-labelledby=\"contained-modal-title-vcenter\"\n                centered\n                isOpen={show} toggle={toggleShow}\n            >\n                <ModalHeader closeButton>\n                    <Title id=\"contained-modal-title-vcenter\">\n                        Change your personal info\n                    </Title>\n                </ModalHeader>\n                <ModalBody>\n                    <Formik\n                        initialValues={initialValues}\n                        validationSchema={validationSchema}\n                        onSubmit={props.onSubmit}\n                    >\n                        {formikProps => {\n                            const {values, setValues, isSubmitting} = formikProps;\n                            return (\n                                <div className=\"w-full xl:p-20 lg:p-16 md:p-3 sm:p-0 items-center min-h-screen bg-white\">\n                                    <div className=\"text-center\">\n                                        <h1 className=\"my-3 font-semibold font-serif text-gray-800 dark:text-gray-200\">Update\n                                            Location Information</h1>\n                                    </div>\n                                    <div className=\"w-full xl:p-4 lg:p-5 md:p-1 items-center min-h-screen bg-white\"\n                                         data-aos=\"fade-up\">\n                                        <div className=\"container mx-auto\">\n                                            <Form className=\"max-w-full mx-auto bg-gray-200 p-16 rounded-md shadow-sm\">\n                                                <div className=\"flex flex-col w-full\">\n                                                    <FastField\n                                                        name=\"name\"\n                                                        component={InputField}\n                                                        placeholder=\"Name\"\n                                                    />\n                                                    <div className=\"block w-full\">\n                                                        <div className=\"inline-block w-2/3\">\n                                                            <FastField\n                                                                name=\"address\"\n                                                                component={InputField}\n                                                                placeholder=\"Address\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <div className=\"block w-full\">\n                                                        <div className=\"inline-block w-1/2\">\n                                                            <FastField\n                                                                name=\"contactEmail\"\n                                                                component={InputField}\n                                                                placeholder=\"Email\"\n                                                            />\n                                                        </div>\n                                                        <div className=\"inline-block w-1/2\">\n                                                            <FastField\n                                                                name=\"contactPhoneNumber\"\n                                                                component={InputField}\n                                                                placeholder=\"Phone Number\"\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                    <FormGroup>\n                                                        <Button\n                                                            type=\"submit\"\n                                                            className=\"w-full pt-1 text-white focus:outline-none\"\n                                                            color=\"primary\"\n                                                            onClick={() => {\n                                                                setValues({\n                                                                    ...values,\n                                                                    locationTypeId: state.city.locationTypes[values.locationTypeId - 1].id,\n                                                                });\n                                                            }}\n                                                        >\n                                                            {isSubmitting && <Spinner size=\"sm\"/>}\n                                                            Update\n                                                        </Button>\n                                                    </FormGroup>\n                                                </div>\n                                            </Form>\n                                        </div>\n                                    </div>\n                                </div>\n                            )\n                        }}\n                    </Formik>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        variant=\"dark\"\n                        type=\"submit\"\n                        onClick={toggleShow}\n                    >\n                        Update\n                    </Button>\n                    <Button onClick={toggleShow}>Close</Button>\n                </ModalFooter>\n            </Modal>\n        </div>\n\n    );\n}\n\nexport default UserPersonalInfo;\n"]},"metadata":{},"sourceType":"module"}