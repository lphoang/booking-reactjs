{"ast":null,"code":"import { GET_ROOM, GET_ALL_ROOMS, SET_SUCCESS, SET_LOADING } from \"../actionTypes\";\nconst initialState = {\n  room: {\n    id: null,\n    name: \"\",\n    description: \"\",\n    price: \"\",\n    capicity: \"\",\n    locationId: \"\",\n    created_at: \"\",\n    updated_at: \"\"\n  },\n  allRooms: [],\n  suggestedRooms: [],\n  success: null,\n  errors: null,\n  loading: false,\n  pagination: {\n    current_page: null,\n    first_page_url: null,\n    from: null,\n    last_page: null,\n    last_page_url: null,\n    next_page_url: null,\n    path: null,\n    per_page: null,\n    prev_page_url: null\n  }\n};\nexport default function room(state = initialState, action) {\n  switch (action.type) {\n    case GET_ROOM:\n      {\n        return { ...state,\n          room: action.payload.room,\n          suggestedRooms: action.payload.suggested_rooms\n        };\n      }\n\n    case GET_ALL_ROOMS:\n      {\n        return { ...state,\n          allRooms: action.payload.rooms.data,\n          pagination: {\n            current_page: action.payload.rooms.current_page,\n            first_page_url: action.payload.rooms.first_page_url,\n            from: action.payload.rooms.from,\n            last_page: action.payload.rooms.last_page,\n            last_page_url: action.payload.rooms.last_page_url,\n            next_page_url: action.payload.rooms.next_page_url,\n            path: action.payload.rooms.path,\n            per_page: action.payload.rooms.per_page,\n            prev_page_url: action.payload.rooms.prev_page_url\n          }\n        };\n      }\n\n    case SET_SUCCESS:\n      {\n        return { ...state,\n          success: action.payload\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/reducers/room.reducer.js"],"names":["GET_ROOM","GET_ALL_ROOMS","SET_SUCCESS","SET_LOADING","initialState","room","id","name","description","price","capicity","locationId","created_at","updated_at","allRooms","suggestedRooms","success","errors","loading","pagination","current_page","first_page_url","from","last_page","last_page_url","next_page_url","path","per_page","prev_page_url","state","action","type","payload","suggested_rooms","rooms","data"],"mappings":"AAAA,SACIA,QADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,WAJJ,QAKO,gBALP;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACFC,IAAAA,EAAE,EAAE,IADF;AAEFC,IAAAA,IAAI,EAAE,EAFJ;AAGFC,IAAAA,WAAW,EAAE,EAHX;AAIFC,IAAAA,KAAK,EAAE,EAJL;AAKFC,IAAAA,QAAQ,EAAE,EALR;AAMFC,IAAAA,UAAU,EAAE,EANV;AAOFC,IAAAA,UAAU,EAAE,EAPV;AAQFC,IAAAA,UAAU,EAAE;AARV,GADW;AAWjBC,EAAAA,QAAQ,EAAE,EAXO;AAYjBC,EAAAA,cAAc,EAAE,EAZC;AAajBC,EAAAA,OAAO,EAAE,IAbQ;AAcjBC,EAAAA,MAAM,EAAE,IAdS;AAejBC,EAAAA,OAAO,EAAE,KAfQ;AAgBjBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,YAAY,EAAE,IADN;AAERC,IAAAA,cAAc,EAAE,IAFR;AAGRC,IAAAA,IAAI,EAAE,IAHE;AAIRC,IAAAA,SAAS,EAAE,IAJH;AAKRC,IAAAA,aAAa,EAAE,IALP;AAMRC,IAAAA,aAAa,EAAE,IANP;AAORC,IAAAA,IAAI,EAAE,IAPE;AAQRC,IAAAA,QAAQ,EAAE,IARF;AASRC,IAAAA,aAAa,EAAE;AATP;AAhBK,CAArB;AA6BA,eAAe,SAASvB,IAAT,CAAcwB,KAAK,GAAGzB,YAAtB,EAAoC0B,MAApC,EAA4C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK/B,QAAL;AAAe;AACX,eAAO,EACH,GAAG6B,KADA;AAEHxB,UAAAA,IAAI,EAAEyB,MAAM,CAACE,OAAP,CAAe3B,IAFlB;AAGHU,UAAAA,cAAc,EAAEe,MAAM,CAACE,OAAP,CAAeC;AAH5B,SAAP;AAKH;;AACD,SAAKhC,aAAL;AAAoB;AAChB,eAAO,EACH,GAAG4B,KADA;AAEHf,UAAAA,QAAQ,EAAEgB,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBC,IAF5B;AAGHhB,UAAAA,UAAU,EAAE;AACRC,YAAAA,YAAY,EAAEU,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBd,YAD3B;AAERC,YAAAA,cAAc,EAAES,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBb,cAF7B;AAGRC,YAAAA,IAAI,EAAEQ,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBZ,IAHnB;AAIRC,YAAAA,SAAS,EAAEO,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBX,SAJxB;AAKRC,YAAAA,aAAa,EAAEM,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBV,aAL5B;AAMRC,YAAAA,aAAa,EAAEK,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBT,aAN5B;AAORC,YAAAA,IAAI,EAAEI,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBR,IAPnB;AAQRC,YAAAA,QAAQ,EAAEG,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBP,QARvB;AASRC,YAAAA,aAAa,EAAEE,MAAM,CAACE,OAAP,CAAeE,KAAf,CAAqBN;AAT5B;AAHT,SAAP;AAeH;;AACD,SAAK1B,WAAL;AAAkB;AACd,eAAO,EACH,GAAG2B,KADA;AAEHb,UAAAA,OAAO,EAAEc,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD,SAAK7B,WAAL;AAAkB;AACd,eAAO,EACH,GAAG0B,KADA;AAEHX,UAAAA,OAAO,EAAEY,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD;AACI,aAAOH,KAAP;AAtCR;AAwCH","sourcesContent":["import {\n    GET_ROOM,\n    GET_ALL_ROOMS,\n    SET_SUCCESS,\n    SET_LOADING\n} from \"../actionTypes\";\n\nconst initialState = {\n    room: {\n        id: null,\n        name: \"\",\n        description: \"\",\n        price: \"\",\n        capicity: \"\",\n        locationId: \"\",\n        created_at: \"\",\n        updated_at: \"\"\n    },\n    allRooms: [],\n    suggestedRooms: [],\n    success: null,\n    errors: null,\n    loading: false,\n    pagination: {\n        current_page: null,\n        first_page_url: null,\n        from: null,\n        last_page: null,\n        last_page_url: null,\n        next_page_url: null,\n        path: null,\n        per_page: null,\n        prev_page_url: null\n    }\n};\n\nexport default function room(state = initialState, action) {\n    switch (action.type) {\n        case GET_ROOM: {\n            return {\n                ...state,\n                room: action.payload.room,\n                suggestedRooms: action.payload.suggested_rooms\n            };\n        }\n        case GET_ALL_ROOMS: {\n            return {\n                ...state,\n                allRooms: action.payload.rooms.data,\n                pagination: {\n                    current_page: action.payload.rooms.current_page,\n                    first_page_url: action.payload.rooms.first_page_url,\n                    from: action.payload.rooms.from,\n                    last_page: action.payload.rooms.last_page,\n                    last_page_url: action.payload.rooms.last_page_url,\n                    next_page_url: action.payload.rooms.next_page_url,\n                    path: action.payload.rooms.path,\n                    per_page: action.payload.rooms.per_page,\n                    prev_page_url: action.payload.rooms.prev_page_url\n                }\n            };\n        }\n        case SET_SUCCESS: {\n            return {\n                ...state,\n                success: action.payload\n            };\n        }\n        case SET_LOADING: {\n            return {\n                ...state,\n                loading: action.payload\n            };\n        }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}