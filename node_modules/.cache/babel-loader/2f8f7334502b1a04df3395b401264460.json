{"ast":null,"code":"var _jsxFileName = \"/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/Login/SignupForm.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useContext, useEffect } from 'react';\nimport { AccountContext } from './accountContext';\nimport './Login.css';\nimport JSONDATA from '../Home/Searchbar/data.json';\nimport PropTypes from 'prop-types';\nimport { Formik, FastField } from 'formik';\nimport { Button, FormGroup, Spinner } from 'reactstrap';\nimport * as Yup from 'yup';\nimport InputField from '../../custom-fields/InputField';\nimport SelectField from '../../custom-fields/SelectField';\nimport { CITY_CATEGORY_OPTIONS } from '../../constants/city';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSignupForm.propTypes = {\n  onSubmit: PropTypes.func\n};\nSignupForm.defaultProps = {\n  onSubmit: null\n};\n\nfunction SignupForm(props) {\n  _s();\n\n  const {\n    switchToSignin\n  } = useContext(AccountContext);\n  const initialValues = {\n    name: '',\n    email: '',\n    password: '',\n    address: '',\n    cityId: null\n  };\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('This field is required'),\n    cityId: Yup.number().required('This field is required').nullable(),\n    email: Yup.string().required('This field is required'),\n    password: Yup.string().required('This field is required'),\n    address: Yup.string().required('This field is required')\n  });\n  useEffect(() => {\n    document.title = \"VIBO | Sign up\";\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: props.onSubmit,\n    children: formikProps => {\n      const {\n        values,\n        errors,\n        touched,\n        isSubmitting\n      } = formikProps;\n      console.log({\n        values,\n        errors,\n        touched\n      });\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"inner-container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"box-container\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            className: \"form-container\",\n            children: [/*#__PURE__*/_jsxDEV(FastField, {\n              name: \"name\",\n              component: InputField,\n              placeholder: \"Full name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: \"email\",\n              component: InputField,\n              placeholder: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(FastField, {\n              name: \"name\",\n              component: InputField,\n              placeholder: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              placeholder: \"City\",\n              className: \"input\",\n              value: city,\n              onChange: e => setCity(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"all\",\n                children: \"All Cities\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this), JSONDATA.map((val, key) => {\n                return /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: val.city,\n                  children: val.city\n                }, key, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 49\n                }, this);\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              className: \"input\",\n              placeholder: \"Password\",\n              value: password,\n              onChange: e => setPassword(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"muted-link\",\n              children: \"or sign up with\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              className: \"submit-button\",\n              type: \"submit\",\n              children: [isSubmitting && /*#__PURE__*/_jsxDEV(Spinner, {\n                size: \"sm\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 54\n              }, this), \"Sign up\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"muted-link\",\n              children: [\"Already have an account?\", /*#__PURE__*/_jsxDEV(\"a\", {\n                className: \"bold-link\",\n                onClick: switchToSignin,\n                children: \"Sign-in\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n\n_s(SignupForm, \"/0BThg4cPtQ10sBqlYOjjsBr4rA=\");\n\n_c = SignupForm;\n;\nexport default SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/Login/SignupForm.js"],"names":["React","useContext","useEffect","AccountContext","JSONDATA","PropTypes","Formik","FastField","Button","FormGroup","Spinner","Yup","InputField","SelectField","CITY_CATEGORY_OPTIONS","SignupForm","propTypes","onSubmit","func","defaultProps","props","switchToSignin","initialValues","name","email","password","address","cityId","validationSchema","object","shape","string","required","number","nullable","document","title","formikProps","values","errors","touched","isSubmitting","console","log","city","e","setCity","target","value","map","val","key","setPassword"],"mappings":"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","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, {\n    useContext,\n    useEffect\n} from 'react';\nimport {AccountContext} from './accountContext';\n\nimport './Login.css'\nimport JSONDATA from '../Home/Searchbar/data.json'\nimport PropTypes from 'prop-types'\nimport {Formik, FastField} from 'formik'\nimport {Button, FormGroup, Spinner} from 'reactstrap'\nimport * as Yup from 'yup'\n\nimport InputField from '../../custom-fields/InputField'\nimport SelectField from '../../custom-fields/SelectField'\nimport {CITY_CATEGORY_OPTIONS} from '../../constants/city'\n\nSignupForm.propTypes = {\n    onSubmit: PropTypes.func,\n}\n\nSignupForm.defaultProps = {\n    onSubmit: null,\n}\n\nfunction SignupForm(props){\n\n    const {switchToSignin} = useContext(AccountContext);\n\n    const initialValues = {\n        name: '',\n        email: '',\n        password: '',\n        address: '',\n        cityId: null,\n    }\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('This field is required'),\n\n        cityId: Yup.number()\n                    .required('This field is required')\n                    .nullable(),\n        \n        email: Yup.string().required('This field is required'),\n        password: Yup.string().required('This field is required'),\n        address: Yup.string().required('This field is required'),\n    })\n\n    useEffect(() =>{\n        document.title = \"VIBO | Sign up\";\n    });\n\n    return(\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={props.onSubmit}\n        >\n            {formikProps => {\n                const {values, errors, touched, isSubmitting} = formikProps;\n                console.log({values, errors, touched});\n\n                return (\n                    <div class=\"inner-container\">\n                        <div className=\"box-container\">\n                            <form className=\"form-container\">\n                                <FastField \n                                    name=\"name\"\n                                    component={InputField}\n                                    placeholder=\"Full name\"\n                                />\n\n                                <FastField \n                                    name=\"email\"\n                                    component={InputField}\n                                    placeholder=\"Email\"\n                                />\n        \n                                <FastField \n                                    name=\"name\"\n                                    component={InputField}\n                                    placeholder=\"Address\"\n                                />\n                                <select\n                                    placeholder=\"City\"\n                                    className=\"input\"\n                                    value={city}\n                                    onChange={(e) => setCity(e.target.value)}\n                                >\n                                    <option value=\"all\">All Cities</option>\n                                    {\n                                        JSONDATA.map((val, key) => {\n                                            return (\n                                                <option value={val.city} key={key}>\n                                                    {val.city}\n                                                </option>\n                                            );\n                                        })}\n                                </select>\n                                <input \n                                    type=\"password\" \n                                    className=\"input\"\n                                    placeholder=\"Password\"\n                                    value={password}\n                                    onChange={(e) => setPassword(e.target.value)}\n                                />\n                                <p class=\"muted-link\">\n                                    or sign up with\n                                </p>\n                                <Button className=\"submit-button\" type=\"submit\">\n                                    {isSubmitting && <Spinner size=\"sm\"/>}\n                                    Sign up\n                                </Button>\n                                <a className=\"muted-link\">\n                                    Already have an account?\n                                    <a \n                                        className=\"bold-link\"\n                                        onClick={switchToSignin}\n                                    >\n                                        Sign-in\n                                    </a>\n                                </a>\n                            </form>\n                        </div>\n                    </div>\n                );\n        }\n    }\n    </Formik>\n    )\n};\n\nexport default SignupForm;\n"]},"metadata":{},"sourceType":"module"}