{"ast":null,"code":"/* eslint-disable eqeqeq */\nimport { SIGN_UP, SIGN_IN, CHECK_AUTH, ADMIN_LOGIN } from \"../actionTypes\";\nimport { setLoading } from \"./commonActions\";\nimport axios from \"axios\"; //-----------------------------------------\n\nconst url = process.env.REACT_APP_API_URL;\nexport const signUp = (dispatch, user, setToken, setUserId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/customer/auth/sign-up`,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      fullName: user.fullName,\n      email: user.email,\n      address: user.address,\n      city: user.city,\n      password: user.password\n    }\n  }).then(async response => {\n    await setToken(response.data.success ? response.data.accessToken : null);\n    await setUserId(response.data.success ? response.data.user.id : null);\n    await dispatch({\n      type: SIGN_UP,\n      payload: {\n        user: response.data.user,\n        success: response.data.success\n      }\n    });\n    setLoading(dispatch, false);\n  }).catch(async error => {\n    setLoading(dispatch, false);\n    await dispatch({\n      type: SIGN_UP,\n      payload: {\n        errors: error.response.data.message\n      }\n    });\n  });\n}; //-----------------------------------------\n\nexport const signIn = (dispatch, user, setToken, setUserId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/customer/auth/sign-in`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  }).then(async response => {\n    await setToken(response.data.success ? response.data.accessToken : null);\n    await setUserId(response.data.success ? response.data.user.id : null);\n    localStorage.setItem(\"first_login\", true);\n    await dispatch({\n      type: SIGN_IN,\n      payload: {\n        user: response.data.user,\n        success: response.data.success\n      }\n    });\n    setLoading(dispatch, false);\n  }).catch(async e => {\n    await dispatch({\n      type: SIGN_IN,\n      payload: {\n        errors: e.response.data.message\n      }\n    });\n    setLoading(dispatch, false);\n  });\n}; //-----------------------------------------\n\nexport let checkAuth;\n\ncheckAuth = async (dispatch, _token, userId) => {\n  let token = _token;\n  let user_id = userId;\n  token != null && token !== \"null\" && token !== \"\" // eslint-disable-line\n  ? await dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: true,\n      user_id,\n      token\n    }\n  }) : await dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: false,\n      user_id: null,\n      token: null\n    }\n  });\n}; //-----------------------------------------\n\n\nexport const adminLogin = (dispatch, user, setToken, setUserId) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/admin/auth/sign-in`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  }).then(async response => {\n    await setToken(response.data.success ? response.data.accessToken : null);\n    await setUserId(response.data.success ? response.data.user.id : null);\n    await dispatch({\n      type: ADMIN_LOGIN,\n      payload: {\n        user: response.data.user,\n        success: response.data.success\n      }\n    });\n    setLoading(dispatch, false);\n  }).catch(async error => {\n    setLoading(dispatch, false);\n    await dispatch({\n      type: ADMIN_LOGIN,\n      payload: {\n        errors: error.response.data.message\n      }\n    });\n  });\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/auth.action.js"],"names":["SIGN_UP","SIGN_IN","CHECK_AUTH","ADMIN_LOGIN","setLoading","axios","url","process","env","REACT_APP_API_URL","signUp","dispatch","user","setToken","setUserId","method","headers","data","fullName","email","address","city","password","then","response","success","accessToken","id","type","payload","catch","error","errors","message","signIn","localStorage","setItem","e","checkAuth","_token","userId","token","user_id","isAuthenticated","adminLogin"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\nimport {SIGN_UP, SIGN_IN, CHECK_AUTH, ADMIN_LOGIN} from \"../actionTypes\";\nimport {setLoading} from \"./commonActions\";\nimport axios from \"axios\";\n\n//-----------------------------------------\nconst url = process.env.REACT_APP_API_URL;\n\nexport const signUp = (dispatch, user, setToken, setUserId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/customer/auth/sign-up`,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            fullName: user.fullName,\n            email: user.email,\n            address: user.address,\n            city: user.city,\n            password: user.password,\n        }\n    })\n        .then(async (response) => {\n            await setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            await setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n            await dispatch({\n                type: SIGN_UP,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                }\n            });\n            setLoading(dispatch, false);\n        })\n        .catch(async (error) => {\n            setLoading(dispatch, false);\n            await dispatch({\n                type: SIGN_UP,\n                payload: {\n                    errors: error.response.data.message\n                }\n            });\n        });\n};\n//-----------------------------------------\n\nexport const signIn = (dispatch, user, setToken, setUserId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/customer/auth/sign-in`,\n        headers: {\n            \"Content-Type\": \" application/json\"\n        },\n        data: {\n            email: user.email,\n            password: user.password\n        }\n    })\n        .then(async (response) => {\n            await setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            await setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n            localStorage.setItem(\"first_login\", true);\n\n            await dispatch({\n                type: SIGN_IN,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                }\n            });\n            setLoading(dispatch, false);\n        })\n        .catch(async (e) => {\n            await dispatch({\n                type: SIGN_IN,\n                payload: {\n                    errors: e.response.data.message\n                }\n            });\n            setLoading(dispatch, false);\n        });\n};\n//-----------------------------------------\n\nexport let checkAuth;\ncheckAuth = async (dispatch, _token, userId) => {\n    let token = _token;\n    let user_id = userId;\n    token != null && token !== \"null\" && token !== \"\" // eslint-disable-line\n        ? await dispatch({\n            type: CHECK_AUTH,\n            payload: {\n                isAuthenticated: true,\n                user_id,\n                token,\n            }\n        })\n        : await dispatch({\n            type: CHECK_AUTH,\n            payload: {\n                isAuthenticated: false,\n                user_id: null,\n                token: null,\n            }\n        });\n};\n\n//-----------------------------------------\n\nexport const adminLogin = (dispatch, user, setToken, setUserId) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/admin/auth/sign-in`,\n        headers: {\n            \"Content-Type\": \" application/json\"\n        },\n        data: {\n            email: user.email,\n            password: user.password\n        }\n    })\n        .then(async (response) => {\n            await setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            await setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n\n            await dispatch({\n                type: ADMIN_LOGIN,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                }\n            });\n            setLoading(dispatch, false);\n        })\n        .catch(async (error) => {\n            setLoading(dispatch, false);\n            await dispatch({\n                type: ADMIN_LOGIN,\n                payload: {\n                    errors: error.response.data.message\n                }\n            });\n        });\n};\n"]},"metadata":{},"sourceType":"module"}