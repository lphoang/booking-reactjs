{"ast":null,"code":"/* eslint-disable eqeqeq */\nimport { SIGN_UP, SIGN_IN, CHECK_AUTH } from \"../actionTypes\";\nimport { setLoading } from \"./commonActions\";\nimport axios from \"axios\"; //-----------------------------------------\n\nconst url = process.env.REACT_APP_API_URL;\nexport const signUp = (dispatch, user, setToken, setUserId) => {\n  //setIsAdmin\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/customer/auth/sign-up`,\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    data: {\n      fullName: user.fullName,\n      email: user.email,\n      address: user.address,\n      city: user.city,\n      password: user.password // is_admin: 0\n\n    }\n  }).then(response => {\n    setToken(response.data.success ? response.data.accessToken : null);\n    setUserId(response.data.success ? response.data.user.id : null); // setIsAdmin(\n    //     response.data.data.success ? response.data.data.is_admin : null\n    // );\n\n    dispatch({\n      type: SIGN_UP,\n      payload: {\n        user: response.data.user,\n        success: response.data.success,\n        errors: response.data.errors\n      }\n    });\n    setLoading(dispatch, false);\n    window.location.replace(\"/\");\n  }).catch(error => {\n    console.log(error);\n  });\n}; //-----------------------------------------\n\nexport const signIn = (dispatch, user, setToken, setUserId) => {\n  //setIsAdmin\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/customer/auth/sign-in`,\n    headers: {\n      \"Content-Type\": \" application/json\"\n    },\n    data: {\n      email: user.email,\n      password: user.password\n    }\n  }).then(response => {\n    setToken(response.data.success ? response.data.accessToken : null);\n    setUserId(response.data.success ? response.data.user.id : null); // setIsAdmin(\n    //     response.data.data.success ? response.data.data.is_admin : null\n    // );\n\n    localStorage.setItem(\"first_login\", true);\n    dispatch({\n      type: SIGN_IN,\n      payload: {\n        user: response.data.user,\n        success: response.data.success,\n        errors: response.data.errors\n      }\n    });\n    setLoading(dispatch, false); // window.location.replace(\"/\");\n  }).catch(error => {\n    console.log(error);\n  });\n}; //-----------------------------------------\n\nexport const checkAuth = (dispatch, _token, userId) => {\n  //isAdmin\n  let token = _token;\n  let user_id = userId; // let is_admin = isAdmin == \"1\" || isAdmin == 1 ? true : false;\n\n  token != null && token != \"null\" && token != \"\" // eslint-disable-line\n  ? dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: true,\n      user_id,\n      token //   is_admin\n\n    }\n  }) : dispatch({\n    type: CHECK_AUTH,\n    payload: {\n      isAuthenticated: false,\n      user_id: null,\n      token: null //   is_admin: null\n\n    }\n  });\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/auth.action.js"],"names":["SIGN_UP","SIGN_IN","CHECK_AUTH","setLoading","axios","url","process","env","REACT_APP_API_URL","signUp","dispatch","user","setToken","setUserId","method","headers","data","fullName","email","address","city","password","then","response","success","accessToken","id","type","payload","errors","window","location","replace","catch","error","console","log","signIn","localStorage","setItem","checkAuth","_token","userId","token","user_id","isAuthenticated"],"mappings":"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","sourcesContent":["/* eslint-disable eqeqeq */\nimport { SIGN_UP, SIGN_IN, CHECK_AUTH } from \"../actionTypes\";\nimport { setLoading } from \"./commonActions\";\nimport axios from \"axios\";\n\n//-----------------------------------------\nconst url = process.env.REACT_APP_API_URL;\n\nexport const signUp = (dispatch, user, setToken, setUserId) => { //setIsAdmin\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/customer/auth/sign-up`,\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        data: {\n            fullName: user.fullName,\n            email: user.email,\n            address: user.address,\n            city: user.city,\n            password: user.password,\n            // is_admin: 0\n        }\n    })\n        .then((response) => {\n            setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n            // setIsAdmin(\n            //     response.data.data.success ? response.data.data.is_admin : null\n            // );\n            dispatch({\n                type: SIGN_UP,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                    errors: response.data.errors,\n                }\n            });\n            setLoading(dispatch, false);\n            window.location.replace(\"/\");\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n//-----------------------------------------\n\nexport const signIn = (dispatch, user, setToken, setUserId) => { //setIsAdmin\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/customer/auth/sign-in`,\n        headers: {\n            \"Content-Type\": \" application/json\"\n        },\n        data: {\n            email: user.email,\n            password: user.password\n        }\n    })\n        .then((response) => {\n            setToken(\n                response.data.success ? response.data.accessToken : null\n            );\n            setUserId(\n                response.data.success ? response.data.user.id : null\n            );\n            // setIsAdmin(\n            //     response.data.data.success ? response.data.data.is_admin : null\n            // );\n            localStorage.setItem(\"first_login\", true);\n\n            dispatch({\n                type: SIGN_IN,\n                payload: {\n                    user: response.data.user,\n                    success: response.data.success,\n                    errors: response.data.errors,\n                }\n            });\n            setLoading(dispatch, false);\n            // window.location.replace(\"/\");\n        })\n        .catch((error) => {\n            console.log(error);\n        });\n};\n//-----------------------------------------\n\nexport const checkAuth = (dispatch, _token, userId) => { //isAdmin\n    let token = _token;\n    let user_id = userId;\n    // let is_admin = isAdmin == \"1\" || isAdmin == 1 ? true : false;\n    token != null && token != \"null\" && token != \"\" // eslint-disable-line\n        ? dispatch({\n              type: CHECK_AUTH,\n              payload: {\n                  isAuthenticated: true,\n                  user_id,\n                  token,\n                //   is_admin\n              }\n          })\n        : dispatch({\n              type: CHECK_AUTH,\n              payload: {\n                  isAuthenticated: false,\n                  user_id: null,\n                  token: null,\n                //   is_admin: null\n              }\n          });\n};\n"]},"metadata":{},"sourceType":"module"}