{"ast":null,"code":"import { GET_CITIES, SET_SUCCESS, SET_LOADING } from \"../actionTypes\";\nconst initialState = {\n  success: null,\n  cities: [],\n  locationTypes: [],\n  errors: null,\n  loading: false\n};\nexport default function city(state = initialState, action) {\n  switch (action.type) {\n    case GET_CITIES:\n      {\n        return { ...state,\n          cities: action.payload.cities\n        };\n      }\n\n    case GET_LOAC:\n      {\n        return { ...state,\n          cities: action.payload.cities\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    case SET_SUCCESS:\n      {\n        return { ...state,\n          success: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/reducers/city.reducer.js"],"names":["GET_CITIES","SET_SUCCESS","SET_LOADING","initialState","success","cities","locationTypes","errors","loading","city","state","action","type","payload","GET_LOAC"],"mappings":"AAAA,SACIA,UADJ,EAEIC,WAFJ,EAGIC,WAHJ,QAIO,gBAJP;AAMA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,IADQ;AAEjBC,EAAAA,MAAM,EAAE,EAFS;AAGjBC,EAAAA,aAAa,EAAE,EAHE;AAIjBC,EAAAA,MAAM,EAAE,IAJS;AAKjBC,EAAAA,OAAO,EAAE;AALQ,CAArB;AAQA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAGP,YAAtB,EAAoCQ,MAApC,EAA4C;AACvD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,UAAL;AAAiB;AACb,eAAO,EACH,GAAGU,KADA;AAEHL,UAAAA,MAAM,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAFpB,SAAP;AAIH;;AACD,SAAKS,QAAL;AAAe;AACX,eAAO,EACH,GAAGJ,KADA;AAEHL,UAAAA,MAAM,EAAEM,MAAM,CAACE,OAAP,CAAeR;AAFpB,SAAP;AAIH;;AACD,SAAKH,WAAL;AAAkB;AACd,eAAO,EACH,GAAGQ,KADA;AAEHF,UAAAA,OAAO,EAAEG,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD,SAAKZ,WAAL;AAAkB;AACd,eAAO,EACH,GAAGS,KADA;AAEHN,UAAAA,OAAO,EAAEO,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD;AACI,aAAOH,KAAP;AA1BR;AA4BH","sourcesContent":["import {\n    GET_CITIES,\n    SET_SUCCESS,\n    SET_LOADING\n} from \"../actionTypes\";\n\nconst initialState = {\n    success: null,\n    cities: [],\n    locationTypes: [],\n    errors: null,\n    loading: false,\n};\n\nexport default function city(state = initialState, action) {\n    switch (action.type) {\n        case GET_CITIES: {\n            return {\n                ...state,\n                cities: action.payload.cities\n            };\n        }\n        case GET_LOAC: {\n            return {\n                ...state,\n                cities: action.payload.cities\n            };\n        }\n        case SET_LOADING: {\n            return {\n                ...state,\n                loading: action.payload\n            };\n        }\n        case SET_SUCCESS: {\n            return {\n                ...state,\n                success: action.payload\n            };\n        }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}