{"ast":null,"code":"import { SADMIN_SIGN_IN, SADMIN_CHECK_AUTH, CREATE_LOCATION, SET_LOADING, UPDATE_USER_INFO } from \"../actionTypes\";\nimport SecureLS from \"secure-ls\";\nlet ls = new SecureLS({\n  encodingType: \"aes\",\n  isCompression: false\n});\n\nlet _sAdmin_token;\n\nlet _sAdmin_id;\n\ntry {\n  _sAdmin_token = ls.get(\"sAdmin_token\");\n  _sAdmin_id = ls.get(\"sAdmin_id\");\n} catch (error) {}\n\nconst initialState = {\n  isAuthenticated: _sAdmin_token !== null && _sAdmin_token !== \"null\" && _sAdmin_token !== \"\",\n  token: _sAdmin_token || null,\n  user_id: _sAdmin_id || null,\n  locations: [],\n  loading: false,\n  success: null,\n  errors: null\n};\nexport default function sAdmin(state = initialState, action) {\n  switch (action.type) {\n    case SADMIN_SIGN_IN:\n      {\n        return { ...state,\n          success: !!action.payload.success,\n          isAuthenticated: !!action.payload.success,\n          token: action.payload.success ? action.payload.accessToken : null,\n          user_id: action.payload.success ? action.payload.user.id : null,\n          // is_admin: action.payload.success\n          //     ? action.payload.is_admin\n          //     : false,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case SADMIN_CHECK_AUTH:\n      {\n        return { ...state,\n          isAuthenticated: action.payload.isAuthenticated,\n          token: action.payload.accessToken,\n          user_id: action.payload.user.id // is_admin: action.payload.is_admin,\n\n        };\n      }\n\n    case CREATE_LOCATION:\n      {\n        return { ...state,\n          success: action.payload.success,\n          locations: action.payload.success ? action.payload.locations : null,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/reducers/sAdmin.reducer.js"],"names":["SADMIN_SIGN_IN","SADMIN_CHECK_AUTH","CREATE_LOCATION","SET_LOADING","UPDATE_USER_INFO","SecureLS","ls","encodingType","isCompression","_sAdmin_token","_sAdmin_id","get","error","initialState","isAuthenticated","token","user_id","locations","loading","success","errors","sAdmin","state","action","type","payload","accessToken","user","id"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,iBAAxB,EAA2CC,eAA3C,EAA4DC,WAA5D,EAAyEC,gBAAzE,QAAgG,gBAAhG;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,EAAE,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,YAAY,EAAE,KAAhB;AAAuBC,EAAAA,aAAa,EAAE;AAAtC,CAAb,CAAT;;AACA,IAAIC,aAAJ;;AACA,IAAIC,UAAJ;;AACA,IAAI;AACAD,EAAAA,aAAa,GAAGH,EAAE,CAACK,GAAH,CAAO,cAAP,CAAhB;AACAD,EAAAA,UAAU,GAAGJ,EAAE,CAACK,GAAH,CAAO,WAAP,CAAb;AACH,CAHD,CAGE,OAAOC,KAAP,EAAc,CAAE;;AAClB,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EACXL,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,MAA5C,IAAqDA,aAAa,KAAK,EAF1D;AAGjBM,EAAAA,KAAK,EAAEN,aAAa,IAAI,IAHP;AAIjBO,EAAAA,OAAO,EAAEN,UAAU,IAAI,IAJN;AAKjBO,EAAAA,SAAS,EAAE,EALM;AAMjBC,EAAAA,OAAO,EAAE,KANQ;AAOjBC,EAAAA,OAAO,EAAE,IAPQ;AAQjBC,EAAAA,MAAM,EAAE;AARS,CAArB;AAWA,eAAe,SAASC,MAAT,CAAgBC,KAAK,GAAGT,YAAxB,EAAsCU,MAAtC,EAA8C;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKxB,cAAL;AAAqB;AACjB,eAAO,EACH,GAAGsB,KADA;AAEHH,UAAAA,OAAO,EAAE,CAAC,CAACI,MAAM,CAACE,OAAP,CAAeN,OAFvB;AAGHL,UAAAA,eAAe,EAAE,CAAC,CAACS,MAAM,CAACE,OAAP,CAAeN,OAH/B;AAIHJ,UAAAA,KAAK,EAAEQ,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyBI,MAAM,CAACE,OAAP,CAAeC,WAAxC,GAAsD,IAJ1D;AAKHV,UAAAA,OAAO,EAAEO,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyBI,MAAM,CAACE,OAAP,CAAeE,IAAf,CAAoBC,EAA7C,GAAkD,IALxD;AAMH;AACA;AACA;AACAR,UAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyB,IAAzB,GAAgCI,MAAM,CAACE,OAAP,CAAeL;AATpD,SAAP;AAWH;;AACD,SAAKnB,iBAAL;AAAwB;AACpB,eAAO,EACH,GAAGqB,KADA;AAEHR,UAAAA,eAAe,EAAES,MAAM,CAACE,OAAP,CAAeX,eAF7B;AAGHC,UAAAA,KAAK,EAAEQ,MAAM,CAACE,OAAP,CAAeC,WAHnB;AAIHV,UAAAA,OAAO,EAAEO,MAAM,CAACE,OAAP,CAAeE,IAAf,CAAoBC,EAJ1B,CAKH;;AALG,SAAP;AAOH;;AACD,SAAK1B,eAAL;AAAsB;AAClB,eAAO,EACH,GAAGoB,KADA;AAEHH,UAAAA,OAAO,EAAEI,MAAM,CAACE,OAAP,CAAeN,OAFrB;AAGHF,UAAAA,SAAS,EAAEM,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyBI,MAAM,CAACE,OAAP,CAAeR,SAAxC,GAAoD,IAH5D;AAIHG,UAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyB,IAAzB,GAAgCI,MAAM,CAACE,OAAP,CAAeL;AAJpD,SAAP;AAMH;;AACD,SAAKjB,WAAL;AAAkB;AACd,eAAO,EACH,GAAGmB,KADA;AAEHJ,UAAAA,OAAO,EAAEK,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD;AACI,aAAOH,KAAP;AAtCR;AAwCH","sourcesContent":["import {SADMIN_SIGN_IN, SADMIN_CHECK_AUTH, CREATE_LOCATION, SET_LOADING, UPDATE_USER_INFO} from \"../actionTypes\";\nimport SecureLS from \"secure-ls\";\n\nlet ls = new SecureLS({ encodingType: \"aes\", isCompression: false });\nlet _sAdmin_token;\nlet _sAdmin_id;\ntry {\n    _sAdmin_token = ls.get(\"sAdmin_token\");\n    _sAdmin_id = ls.get(\"sAdmin_id\");\n} catch (error) {}\nconst initialState = {\n    isAuthenticated:\n        _sAdmin_token !== null && _sAdmin_token !== \"null\" &&_sAdmin_token !== \"\",\n    token: _sAdmin_token || null,\n    user_id: _sAdmin_id || null,\n    locations: [],\n    loading: false,\n    success: null,\n    errors: null\n};\n\nexport default function sAdmin(state = initialState, action) {\n    switch (action.type) {\n        case SADMIN_SIGN_IN: {\n            return {\n                ...state,\n                success: !!action.payload.success,\n                isAuthenticated: !!action.payload.success,\n                token: action.payload.success ? action.payload.accessToken : null,\n                user_id: action.payload.success ? action.payload.user.id : null,\n                // is_admin: action.payload.success\n                //     ? action.payload.is_admin\n                //     : false,\n                errors: action.payload.success ? null : action.payload.errors\n            };\n        }\n        case SADMIN_CHECK_AUTH: {\n            return {\n                ...state,\n                isAuthenticated: action.payload.isAuthenticated,\n                token: action.payload.accessToken,\n                user_id: action.payload.user.id,\n                // is_admin: action.payload.is_admin,\n            };\n        }\n        case CREATE_LOCATION: {\n            return {\n                ...state,\n                success: action.payload.success,\n                locations: action.payload.success ? action.payload.locations : null,\n                errors: action.payload.success ? null : action.payload.errors\n            };\n        }\n        case SET_LOADING: {\n            return {\n                ...state,\n                loading: action.payload\n            };\n        }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}