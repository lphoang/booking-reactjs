{"ast":null,"code":"export const formatPrice = price => {\n  price = Math.floor(price);\n  let priceString = \"\";\n\n  while (price > 999) {\n    let num = price % 1000;\n\n    if (num < 10) {\n      num = '00' + num;\n    } else if (num < 100) {\n      num = '0' + num;\n    }\n\n    priceString = '.' + num + priceString;\n    price = Math.floor(price / 1000);\n\n    if (price <= 999) {\n      priceString = price + '' + priceString;\n      break;\n    }\n  }\n\n  return priceString;\n};\nexport const formatDate = isoDate => {\n  return new Date(isoDate).toLocaleString();\n};\nexport const formatStrDate = strDate => {\n  return new Date(strDate).toISOString();\n};\nexport const countDiffDate = (date1, date2) => {\n  const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n\n  const firstDate = new Date(formatDate(date1));\n  const secondDate = new Date(formatDate(date2));\n  return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/constants/function.js"],"names":["formatPrice","price","Math","floor","priceString","num","formatDate","isoDate","Date","toLocaleString","formatStrDate","strDate","toISOString","countDiffDate","date1","date2","oneDay","firstDate","secondDate","round","abs"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,KAAD,IAAW;AAClCA,EAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAR;AACA,MAAIG,WAAW,GAAG,EAAlB;;AACA,SAAOH,KAAK,GAAG,GAAf,EAAoB;AAChB,QAAII,GAAG,GAAGJ,KAAK,GAAG,IAAlB;;AACA,QAAII,GAAG,GAAG,EAAV,EAAc;AACVA,MAAAA,GAAG,GAAG,OAAOA,GAAb;AACH,KAFD,MAEO,IAAIA,GAAG,GAAG,GAAV,EAAe;AAClBA,MAAAA,GAAG,GAAG,MAAMA,GAAZ;AAEH;;AACDD,IAAAA,WAAW,GAAG,MAAMC,GAAN,GAAYD,WAA1B;AACAH,IAAAA,KAAK,GAAGC,IAAI,CAACC,KAAL,CAAWF,KAAK,GAAE,IAAlB,CAAR;;AACA,QAAIA,KAAK,IAAI,GAAb,EAAkB;AACdG,MAAAA,WAAW,GAAGH,KAAK,GAAG,EAAR,GAAaG,WAA3B;AACA;AACH;AACJ;;AACD,SAAOA,WAAP;AACH,CAnBM;AAsBP,OAAO,MAAME,UAAU,GAAIC,OAAD,IAAa;AACnC,SAAO,IAAIC,IAAJ,CAASD,OAAT,EAAkBE,cAAlB,EAAP;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAIC,OAAD,IAAa;AACtC,SAAO,IAAIH,IAAJ,CAASG,OAAT,EAAkBC,WAAlB,EAAP;AACH,CAFM;AAIP,OAAO,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3C,QAAMC,MAAM,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA9B,CAD2C,CACP;;AACpC,QAAMC,SAAS,GAAG,IAAIT,IAAJ,CAASF,UAAU,CAACQ,KAAD,CAAnB,CAAlB;AACA,QAAMI,UAAU,GAAG,IAAIV,IAAJ,CAASF,UAAU,CAACS,KAAD,CAAnB,CAAnB;AAEA,SAAOb,IAAI,CAACiB,KAAL,CAAWjB,IAAI,CAACkB,GAAL,CAAS,CAACH,SAAS,GAAGC,UAAb,IAA2BF,MAApC,CAAX,CAAP;AACH,CANM","sourcesContent":["export const formatPrice = (price) => {\n    price = Math.floor(price);\n    let priceString = \"\"\n    while (price > 999) {\n        let num = price % 1000;\n        if (num < 10) {\n            num = '00' + num\n        } else if (num < 100) {\n            num = '0' + num;\n\n        }\n        priceString = '.' + num + priceString;\n        price = Math.floor(price/ 1000);\n        if (price <= 999) {\n            priceString = price + '' + priceString;\n            break;\n        }\n    }\n    return priceString;\n}\n\n\nexport const formatDate = (isoDate) => {\n    return new Date(isoDate).toLocaleString();\n}\n\nexport const formatStrDate = (strDate) => {\n    return new Date(strDate).toISOString();\n}\n\nexport const countDiffDate = (date1, date2) => {\n    const oneDay = 24 * 60 * 60 * 1000; // hours*minutes*seconds*milliseconds\n    const firstDate = new Date(formatDate(date1));\n    const secondDate = new Date(formatDate(date2));\n\n    return Math.round(Math.abs((firstDate - secondDate) / oneDay));\n}\n\n"]},"metadata":{},"sourceType":"module"}