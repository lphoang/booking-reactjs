{"ast":null,"code":"import { CREATE_LOCATION, GET_ADMIN_INFO, GET_BOOKING_REQUEST, RESPONSE_BOOKING_REQUEST } from '../actionTypes';\nimport axios from \"axios\";\nimport { setLoading } from \"./commonActions\"; //-----------------------------------------\n\nconst url = process.env.REACT_APP_API_URL;\nexport const getAdmin = (dispatch, token) => {\n  axios(`${url}/admin/users/me`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_ADMIN_INFO,\n      payload: {\n        user: response.data\n      }\n    });\n  }).catch(error => {});\n};\nexport const getBookingRequests = (dispatch, token) => {\n  axios(`${url}/admin/bookings`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_BOOKING_REQUEST,\n      payload: response.data.results\n    });\n  }).catch(error => {});\n};\nexport const responseBookingRequests = (dispatch, token, bookingId, status) => {\n  axios.put(`${url}/admin/bookings/${bookingId}`, {\n    status\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: RESPONSE_BOOKING_REQUEST,\n      payload: response.data.results\n    });\n  }).catch(error => {});\n}; //-----------------------------------------\n\nexport const createLocation = (dispatch, token, locationData) => {\n  setLoading(dispatch, true);\n  axios({\n    method: \"POST\",\n    url: `${url}/super-admin/locations`,\n    headers: {\n      Authorization: `Bearer ${token}`\n    },\n    data: {\n      name: locationData.name,\n      address: locationData.address,\n      city: locationData.city,\n      locationTypeId: locationData.locationTypeId,\n      contactPhoneNumber: locationData.contactPhoneNumber,\n      contactEmail: locationData.contactEmail,\n      price: locationData.price,\n      description: locationData.description,\n      workingTime: locationData.workingTime\n    }\n  }).then(response => {\n    dispatch({\n      type: CREATE_LOCATION,\n      payload: response.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, true);\n    console.log(error.message);\n  });\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/admin.action.js"],"names":["CREATE_LOCATION","GET_ADMIN_INFO","GET_BOOKING_REQUEST","RESPONSE_BOOKING_REQUEST","axios","setLoading","url","process","env","REACT_APP_API_URL","getAdmin","dispatch","token","headers","Authorization","then","response","type","payload","user","data","catch","error","getBookingRequests","results","responseBookingRequests","bookingId","status","put","createLocation","locationData","method","name","address","city","locationTypeId","contactPhoneNumber","contactEmail","price","description","workingTime","console","log","message"],"mappings":"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","sourcesContent":["import {CREATE_LOCATION, GET_ADMIN_INFO, GET_BOOKING_REQUEST, RESPONSE_BOOKING_REQUEST} from '../actionTypes'\nimport axios from \"axios\";\nimport {setLoading} from \"./commonActions\";\n\n//-----------------------------------------\nconst url = process.env.REACT_APP_API_URL;\n\nexport const getAdmin = (dispatch, token) => {\n    axios(`${url}/admin/users/me`, {\n        headers: {Authorization: `Bearer ${token}`}\n    })\n        .then((response) => {\n            dispatch({\n                type: GET_ADMIN_INFO,\n                payload: {\n                    user: response.data\n                }\n            });\n        })\n        .catch((error) => {\n        });\n};\n\nexport const getBookingRequests = (dispatch, token) => {\n    axios(`${url}/admin/bookings`, {\n        headers: {Authorization: `Bearer ${token}`}\n    })\n        .then((response) => {\n            dispatch({\n                type: GET_BOOKING_REQUEST,\n                payload: response.data.results\n            });\n        })\n        .catch((error) => {\n        });\n};\n\nexport const responseBookingRequests = (dispatch, token, bookingId, status) => {\n    axios\n        .put(`${url}/admin/bookings/${bookingId}`,\n            {\n                status,\n            },\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n        .then((response) => {\n            dispatch({\n                type: RESPONSE_BOOKING_REQUEST,\n                payload: response.data.results\n            });\n        })\n        .catch((error) => {\n        });\n}\n\n//-----------------------------------------\n\nexport const createLocation = (dispatch, token, locationData) => {\n    setLoading(dispatch, true);\n    axios({\n        method: \"POST\",\n        url: `${url}/super-admin/locations`,\n        headers: { Authorization: `Bearer ${token}` },\n        data: {\n            name: locationData.name,\n            address: locationData.address,\n            city: locationData.city,\n            locationTypeId: locationData.locationTypeId,\n            contactPhoneNumber: locationData.contactPhoneNumber,\n            contactEmail: locationData.contactEmail,\n            price: locationData.price,\n            description: locationData.description,\n            workingTime: locationData.workingTime,\n        }\n    })\n        .then((response) => {\n            dispatch({\n                type: CREATE_LOCATION,\n                payload: response.data\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n            setLoading(dispatch, true);\n            console.log(error.message)\n        });\n};\n"]},"metadata":{},"sourceType":"module"}