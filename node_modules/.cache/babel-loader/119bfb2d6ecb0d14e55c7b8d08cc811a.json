{"ast":null,"code":"var _jsxFileName = \"/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/SuperAdmin/pages/CreateLocation/CreateLocationForm.jsx\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Formik, Form, FastField } from 'formik';\nimport { Button, FormGroup, Spinner } from 'reactstrap';\nimport * as Yup from 'yup';\nimport { TimePicker } from 'antd';\nimport SelectField from '../../../../custom-fields/SelectField';\nimport InputField from '../../../../custom-fields/InputField';\nimport { CITY_OPTIONS } from '../../../../constants/global';\nimport { createLocation } from '../../../../redux/actions/sAdmin.action';\nimport { getLocationTypes } from \"../../../../redux/actions/city.action\";\nimport PropTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateLocationForm.propTypes = {\n  onSubmit: PropTypes.func\n};\nCreateLocationForm.defaultProps = {\n  onSubmit: null\n};\nconst RangePicker = TimePicker.RangePicker;\nexport default function CreateLocationForm(props) {\n  _s();\n\n  const dispatch = useDispatch();\n  const state = useSelector(state => state);\n  const initialValues = {\n    locationTypeId: null,\n    name: '',\n    address: '',\n    city: '',\n    workingTime: '',\n    contactPhoneNumber: '',\n    contactEmail: '',\n    price: '',\n    description: '',\n    thumbnail: '',\n    images: [],\n    isFeatured: false\n  };\n  const [location, setLocation] = useState(initialValues);\n  const locationTypeOptions = [];\n  useEffect(() => {\n    state.city.locationTypes.map(type => {\n      locationTypeOptions.push({\n        value: state.city.locationTypes.indexOf(type) + 1,\n        label: type.name\n      });\n      return locationTypeOptions;\n    });\n  }, [state.city.locationTypes]);\n  useEffect(() => {\n    getLocationTypes(dispatch);\n    document.title = \"Create new location\";\n  }, []);\n  const validationSchema = Yup.object().shape({\n    name: Yup.string().required('Name is required').nullable(),\n    locationTypeId: Yup.string().required('Location type is required').nullable(),\n    city: Yup.string().required('City is required').nullable()\n  });\n\n  const onSubmitHandler = () => {\n    const formData = new FormData();\n    formData.append(\"_method\", \"PUT\");\n    formData.append(\"locationTypeId\", location.locationTypeId);\n    formData.append(\"name\", location.name);\n    formData.append(\"contactPhoneNumber\", location.contactPhoneNumber);\n    formData.append(\"contactEmail\", location.contactEmail);\n    formData.append(\"address\", location.address);\n    formData.append(\"city\", location.city);\n    formData.append(\"price\", location.price);\n    formData.append(\"description\", location.description);\n    formData.append(\"thumbnail\", location.thumbnail);\n    formData.append(\"isFeatured\", location.isFeatured);\n    formData.append(\"image\", location.image);\n\n    for (let value of formData.values()) {\n      console.log(value);\n    }\n\n    createLocation(dispatch, state.sAdmin.token, formData);\n  };\n\n  const [time, setTime] = useState(\"\");\n  const [timeString, setTimeString] = useState(\"\");\n\n  const onTimeSelection = (value, timeString) => {\n    setTime(value);\n    setTimeString(timeString);\n    console.log(timeString);\n    setLocation({ ...location,\n      workingTime: timeString\n    });\n  };\n\n  const handleSubmit = values => {\n    setTimeout(() => {\n      setLocation({ ...location,\n        name: values.name,\n        address: values.address,\n        city: values.city,\n        locationTypeId: state.city.locationTypes[values.locationTypeId - 1].id,\n        contactPhoneNumber: values.contactPhoneNumber,\n        contactEmail: values.contactEmail,\n        price: values.price,\n        description: values.description\n      });\n    }, 500);\n    console.log(\"Location: \", location);\n    props.onSubmit();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: initialValues,\n    validationSchema: validationSchema,\n    onSubmit: props.onSubmit,\n    children: formikProps => {\n      const {\n        isSubmitting\n      } = formikProps;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full xl:px-32 lg:px-16 md:px-3 sm:p-0 items-center min-h-screen bg-white\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"my-3 font-semibold font-serif text-gray-800 dark:text-gray-200\",\n            children: \"Create new Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-full xl:p-10 lg:p-5 md:p-1 items-center min-h-screen bg-white\",\n          \"data-aos\": \"fade-up\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container mx-auto\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"max-w-full mx-auto bg-gray-200 p-16 rounded-md shadow-sm\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"flex flex-col w-full\",\n                children: [/*#__PURE__*/_jsxDEV(FastField, {\n                  name: \"name\",\n                  component: InputField,\n                  placeholder: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inline-block w-2/3\",\n                    children: /*#__PURE__*/_jsxDEV(FastField, {\n                      name: \"address\",\n                      component: InputField,\n                      placeholder: \"Address\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inline-block w-1/3\",\n                    children: /*#__PURE__*/_jsxDEV(FastField, {\n                      name: \"city\",\n                      component: SelectField,\n                      placeholder: \"City\",\n                      options: CITY_OPTIONS\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                  name: \"locationTypeId\",\n                  component: SelectField,\n                  placeholder: \"Location Type\",\n                  options: locationTypeOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(RangePicker, {\n                  id: \"workingTime\",\n                  size: \"large\",\n                  style: {\n                    height: \"auto\",\n                    width: \"auto\",\n                    cursor: \"pointer\",\n                    borderRadius: \"3px\",\n                    marginBottom: \"12px\"\n                  },\n                  onChange: onTimeSelection\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"block w-full\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inline-block w-1/2\",\n                    children: /*#__PURE__*/_jsxDEV(FastField, {\n                      name: \"contactEmail\",\n                      component: InputField,\n                      placeholder: \"Email\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"inline-block w-1/2\",\n                    children: /*#__PURE__*/_jsxDEV(FastField, {\n                      name: \"contactPhoneNumber\",\n                      component: InputField,\n                      placeholder: \"Phone Number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 49\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                  name: \"price\",\n                  component: InputField,\n                  placeholder: \"Average Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FastField, {\n                  name: \"description\",\n                  component: InputField,\n                  placeholder: \"Description\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    type: \"submit\",\n                    className: \"w-full pt-1 text-white focus:outline-none\",\n                    children: [isSubmitting && /*#__PURE__*/_jsxDEV(Spinner, {\n                      size: \"sm\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 66\n                    }, this), \"Create\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CreateLocationForm, \"XVIF3g3EuzULzMvYmVWARB/SdTE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = CreateLocationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateLocationForm\");","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/components/SuperAdmin/pages/CreateLocation/CreateLocationForm.jsx"],"names":["React","useEffect","useState","useDispatch","useSelector","Formik","Form","FastField","Button","FormGroup","Spinner","Yup","TimePicker","SelectField","InputField","CITY_OPTIONS","createLocation","getLocationTypes","PropTypes","CreateLocationForm","propTypes","onSubmit","func","defaultProps","RangePicker","props","dispatch","state","initialValues","locationTypeId","name","address","city","workingTime","contactPhoneNumber","contactEmail","price","description","thumbnail","images","isFeatured","location","setLocation","locationTypeOptions","locationTypes","map","type","push","value","indexOf","label","document","title","validationSchema","object","shape","string","required","nullable","onSubmitHandler","formData","FormData","append","image","values","console","log","sAdmin","token","time","setTime","timeString","setTimeString","onTimeSelection","handleSubmit","setTimeout","id","formikProps","isSubmitting","height","width","cursor","borderRadius","marginBottom"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,MAAR,EAAgBC,IAAhB,EAAsBC,SAAtB,QAAsC,QAAtC;AACA,SAAQC,MAAR,EAAgBC,SAAhB,EAA2BC,OAA3B,QAAyC,YAAzC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,UAAR,QAAyB,MAAzB;AAEA,OAAOC,WAAP,MAAwB,uCAAxB;AACA,OAAOC,UAAP,MAAuB,sCAAvB;AACA,SAAQC,YAAR,QAA2B,8BAA3B;AACA,SAAQC,cAAR,QAA6B,yCAA7B;AACA,SAAQC,gBAAR,QAA+B,uCAA/B;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEAC,kBAAkB,CAACC,SAAnB,GAA+B;AAC3BC,EAAAA,QAAQ,EAAEH,SAAS,CAACI;AADO,CAA/B;AAIAH,kBAAkB,CAACI,YAAnB,GAAkC;AAC9BF,EAAAA,QAAQ,EAAE;AADoB,CAAlC;AAIA,MAAMG,WAAW,GAAGZ,UAAU,CAACY,WAA/B;AAEA,eAAe,SAASL,kBAAT,CAA4BM,KAA5B,EAAmC;AAAA;;AAC9C,QAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,QAAMwB,KAAK,GAAGvB,WAAW,CAAEuB,KAAD,IAAWA,KAAZ,CAAzB;AAEA,QAAMC,aAAa,GAAG;AAClBC,IAAAA,cAAc,EAAE,IADE;AAElBC,IAAAA,IAAI,EAAE,EAFY;AAGlBC,IAAAA,OAAO,EAAE,EAHS;AAIlBC,IAAAA,IAAI,EAAE,EAJY;AAKlBC,IAAAA,WAAW,EAAE,EALK;AAMlBC,IAAAA,kBAAkB,EAAE,EANF;AAOlBC,IAAAA,YAAY,EAAE,EAPI;AAQlBC,IAAAA,KAAK,EAAE,EARW;AASlBC,IAAAA,WAAW,EAAE,EATK;AAUlBC,IAAAA,SAAS,EAAE,EAVO;AAWlBC,IAAAA,MAAM,EAAE,EAXU;AAYlBC,IAAAA,UAAU,EAAE;AAZM,GAAtB;AAcA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BxC,QAAQ,CAAC0B,aAAD,CAAxC;AAEA,QAAMe,mBAAmB,GAAG,EAA5B;AAEA1C,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,KAAK,CAACK,IAAN,CAAWY,aAAX,CAAyBC,GAAzB,CAA8BC,IAAD,IAAU;AACnCH,MAAAA,mBAAmB,CAACI,IAApB,CAAyB;AACrBC,QAAAA,KAAK,EAAErB,KAAK,CAACK,IAAN,CAAWY,aAAX,CAAyBK,OAAzB,CAAiCH,IAAjC,IAAyC,CAD3B;AAErBI,QAAAA,KAAK,EAAEJ,IAAI,CAAChB;AAFS,OAAzB;AAIA,aAAOa,mBAAP;AACH,KAND;AAOH,GARQ,EAQN,CAAChB,KAAK,CAACK,IAAN,CAAWY,aAAZ,CARM,CAAT;AAUA3C,EAAAA,SAAS,CAAC,MAAM;AACZgB,IAAAA,gBAAgB,CAACS,QAAD,CAAhB;AACAyB,IAAAA,QAAQ,CAACC,KAAT,GAAiB,qBAAjB;AACH,GAHQ,EAGN,EAHM,CAAT;AAKA,QAAMC,gBAAgB,GAAG1C,GAAG,CAAC2C,MAAJ,GAAaC,KAAb,CAAmB;AACxCzB,IAAAA,IAAI,EAAEnB,GAAG,CAAC6C,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,EAA0CC,QAA1C,EADkC;AAExC7B,IAAAA,cAAc,EAAElB,GAAG,CAAC6C,MAAJ,GAAaC,QAAb,CAAsB,2BAAtB,EAAmDC,QAAnD,EAFwB;AAGxC1B,IAAAA,IAAI,EAAErB,GAAG,CAAC6C,MAAJ,GAAaC,QAAb,CAAsB,kBAAtB,EAA0CC,QAA1C;AAHkC,GAAnB,CAAzB;;AAMA,QAAMC,eAAe,GAAG,MAAM;AAC1B,UAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AAEAD,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2B,KAA3B;AACAF,IAAAA,QAAQ,CAACE,MAAT,CAAgB,gBAAhB,EAAkCrB,QAAQ,CAACZ,cAA3C;AACA+B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBrB,QAAQ,CAACX,IAAjC;AACA8B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,oBAAhB,EAAsCrB,QAAQ,CAACP,kBAA/C;AACA0B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCrB,QAAQ,CAACN,YAAzC;AACAyB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,SAAhB,EAA2BrB,QAAQ,CAACV,OAApC;AACA6B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBrB,QAAQ,CAACT,IAAjC;AACA4B,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBrB,QAAQ,CAACL,KAAlC;AACAwB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+BrB,QAAQ,CAACJ,WAAxC;AACAuB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BrB,QAAQ,CAACH,SAAtC;AACAsB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8BrB,QAAQ,CAACD,UAAvC;AACAoB,IAAAA,QAAQ,CAACE,MAAT,CAAgB,OAAhB,EAAyBrB,QAAQ,CAACsB,KAAlC;;AAEA,SAAK,IAAIf,KAAT,IAAkBY,QAAQ,CAACI,MAAT,EAAlB,EAAqC;AACjCC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,KAAZ;AACH;;AACDhC,IAAAA,cAAc,CAACU,QAAD,EAAWC,KAAK,CAACwC,MAAN,CAAaC,KAAxB,EAA+BR,QAA/B,CAAd;AACH,GApBD;;AAsBA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBpE,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACqE,UAAD,EAAaC,aAAb,IAA8BtE,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMuE,eAAe,GAAG,CAACzB,KAAD,EAAQuB,UAAR,KAAuB;AAC3CD,IAAAA,OAAO,CAACtB,KAAD,CAAP;AACAwB,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAN,IAAAA,OAAO,CAACC,GAAR,CAAYK,UAAZ;AACA7B,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcR,MAAAA,WAAW,EAAEsC;AAA3B,KAAD,CAAX;AACH,GALD;;AAOA,QAAMG,YAAY,GAAIV,MAAD,IAAY;AAC7BW,IAAAA,UAAU,CAAC,MAAM;AACbjC,MAAAA,WAAW,CAAC,EACR,GAAGD,QADK;AAERX,QAAAA,IAAI,EAAEkC,MAAM,CAAClC,IAFL;AAGRC,QAAAA,OAAO,EAAEiC,MAAM,CAACjC,OAHR;AAIRC,QAAAA,IAAI,EAAEgC,MAAM,CAAChC,IAJL;AAKRH,QAAAA,cAAc,EAAEF,KAAK,CAACK,IAAN,CAAWY,aAAX,CAAyBoB,MAAM,CAACnC,cAAP,GAAwB,CAAjD,EAAoD+C,EAL5D;AAMR1C,QAAAA,kBAAkB,EAAE8B,MAAM,CAAC9B,kBANnB;AAORC,QAAAA,YAAY,EAAE6B,MAAM,CAAC7B,YAPb;AAQRC,QAAAA,KAAK,EAAE4B,MAAM,CAAC5B,KARN;AASRC,QAAAA,WAAW,EAAE2B,MAAM,CAAC3B;AATZ,OAAD,CAAX;AAWH,KAZS,EAYP,GAZO,CAAV;AAaA4B,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BzB,QAA1B;AACAhB,IAAAA,KAAK,CAACJ,QAAN;AACH,GAhBD;;AAkBA,sBACI,QAAC,MAAD;AACI,IAAA,aAAa,EAAEO,aADnB;AAEI,IAAA,gBAAgB,EAAEyB,gBAFtB;AAGI,IAAA,QAAQ,EAAE5B,KAAK,CAACJ,QAHpB;AAAA,cAKKwD,WAAW,IAAI;AACZ,YAAM;AAACC,QAAAA;AAAD,UAAiBD,WAAvB;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,4EAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,gEAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI;AAAK,UAAA,SAAS,EAAC,iEAAf;AACK,sBAAS,SADd;AAAA,iCAEI;AAAK,YAAA,SAAS,EAAC,mBAAf;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,0DAAhB;AAAA,qCACI;AAAK,gBAAA,SAAS,EAAC,sBAAf;AAAA,wCACI,QAAC,SAAD;AACI,kBAAA,IAAI,EAAC,MADT;AAEI,kBAAA,SAAS,EAAE/D,UAFf;AAGI,kBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,oBAAf;AAAA,2CACI,QAAC,SAAD;AACI,sBAAA,IAAI,EAAC,SADT;AAEI,sBAAA,SAAS,EAAEA,UAFf;AAGI,sBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAQI;AAAK,oBAAA,SAAS,EAAC,oBAAf;AAAA,2CACI,QAAC,SAAD;AACI,sBAAA,IAAI,EAAC,MADT;AAEI,sBAAA,SAAS,EAAED,WAFf;AAGI,sBAAA,WAAW,EAAC,MAHhB;AAII,sBAAA,OAAO,EAAEE;AAJb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BARJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAuBI,QAAC,SAAD;AACI,kBAAA,IAAI,EAAC,gBADT;AAEI,kBAAA,SAAS,EAAEF,WAFf;AAGI,kBAAA,WAAW,EAAC,eAHhB;AAII,kBAAA,OAAO,EAAE8B;AAJb;AAAA;AAAA;AAAA;AAAA,wBAvBJ,eA6BI,QAAC,WAAD;AACI,kBAAA,EAAE,EAAC,aADP;AAEI,kBAAA,IAAI,EAAC,OAFT;AAGI,kBAAA,KAAK,EAAE;AACHoC,oBAAAA,MAAM,EAAE,MADL;AAEHC,oBAAAA,KAAK,EAAE,MAFJ;AAGHC,oBAAAA,MAAM,EAAE,SAHL;AAIHC,oBAAAA,YAAY,EAAE,KAJX;AAKHC,oBAAAA,YAAY,EAAE;AALX,mBAHX;AAUI,kBAAA,QAAQ,EAAEV;AAVd;AAAA;AAAA;AAAA;AAAA,wBA7BJ,eAyCI;AAAK,kBAAA,SAAS,EAAC,cAAf;AAAA,0CACI;AAAK,oBAAA,SAAS,EAAC,oBAAf;AAAA,2CACI,QAAC,SAAD;AACI,sBAAA,IAAI,EAAC,cADT;AAEI,sBAAA,SAAS,EAAE3D,UAFf;AAGI,sBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BADJ,eAQI;AAAK,oBAAA,SAAS,EAAC,oBAAf;AAAA,2CACI,QAAC,SAAD;AACI,sBAAA,IAAI,EAAC,oBADT;AAEI,sBAAA,SAAS,EAAEA,UAFf;AAGI,sBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,0BARJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzCJ,eAyDI,QAAC,SAAD;AACI,kBAAA,IAAI,EAAC,OADT;AAEI,kBAAA,SAAS,EAAEA,UAFf;AAGI,kBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,wBAzDJ,eA8DI,QAAC,SAAD;AACI,kBAAA,IAAI,EAAC,aADT;AAEI,kBAAA,SAAS,EAAEA,UAFf;AAGI,kBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,wBA9DJ,eAmEI,QAAC,SAAD;AAAA,yCAOI,QAAC,MAAD;AACI,oBAAA,IAAI,EAAC,QADT;AAEI,oBAAA,SAAS,EAAC,2CAFd;AAAA,+BAIKgE,YAAY,iBAAI,QAAC,OAAD;AAAS,sBAAA,IAAI,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,4BAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,wBAnEJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAoGH;AA3GL;AAAA;AAAA;AAAA;AAAA,UADJ;AA+GH;;GA5MuB3D,kB;UACHhB,W,EACHC,W;;;KAFMe,kB","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, {useEffect, useState} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Formik, Form, FastField} from 'formik'\nimport {Button, FormGroup, Spinner} from 'reactstrap'\nimport * as Yup from 'yup'\nimport {TimePicker} from 'antd';\n\nimport SelectField from '../../../../custom-fields/SelectField'\nimport InputField from '../../../../custom-fields/InputField'\nimport {CITY_OPTIONS} from '../../../../constants/global'\nimport {createLocation} from '../../../../redux/actions/sAdmin.action'\nimport {getLocationTypes} from \"../../../../redux/actions/city.action\";\nimport PropTypes from \"prop-types\";\n\nCreateLocationForm.propTypes = {\n    onSubmit: PropTypes.func,\n}\n\nCreateLocationForm.defaultProps = {\n    onSubmit: null,\n}\n\nconst RangePicker = TimePicker.RangePicker;\n\nexport default function CreateLocationForm(props) {\n    const dispatch = useDispatch();\n    const state = useSelector((state) => state);\n\n    const initialValues = {\n        locationTypeId: null,\n        name: '',\n        address: '',\n        city: '',\n        workingTime: '',\n        contactPhoneNumber: '',\n        contactEmail: '',\n        price: '',\n        description: '',\n        thumbnail: '',\n        images: [],\n        isFeatured: false,\n    }\n    const [location, setLocation] = useState(initialValues);\n\n    const locationTypeOptions = [];\n\n    useEffect(() => {\n        state.city.locationTypes.map((type) => {\n            locationTypeOptions.push({\n                value: state.city.locationTypes.indexOf(type) + 1,\n                label: type.name,\n            });\n            return locationTypeOptions;\n        })\n    }, [state.city.locationTypes]);\n\n    useEffect(() => {\n        getLocationTypes(dispatch);\n        document.title = \"Create new location\";\n    }, [])\n\n    const validationSchema = Yup.object().shape({\n        name: Yup.string().required('Name is required').nullable(),\n        locationTypeId: Yup.string().required('Location type is required').nullable(),\n        city: Yup.string().required('City is required').nullable(),\n    })\n\n    const onSubmitHandler = () => {\n        const formData = new FormData();\n\n        formData.append(\"_method\", \"PUT\");\n        formData.append(\"locationTypeId\", location.locationTypeId);\n        formData.append(\"name\", location.name);\n        formData.append(\"contactPhoneNumber\", location.contactPhoneNumber);\n        formData.append(\"contactEmail\", location.contactEmail);\n        formData.append(\"address\", location.address);\n        formData.append(\"city\", location.city);\n        formData.append(\"price\", location.price);\n        formData.append(\"description\", location.description);\n        formData.append(\"thumbnail\", location.thumbnail);\n        formData.append(\"isFeatured\", location.isFeatured);\n        formData.append(\"image\", location.image);\n\n        for (let value of formData.values()) {\n            console.log(value);\n        }\n        createLocation(dispatch, state.sAdmin.token, formData);\n    }\n\n    const [time, setTime] = useState(\"\");\n    const [timeString, setTimeString] = useState(\"\");\n\n    const onTimeSelection = (value, timeString) => {\n        setTime(value);\n        setTimeString(timeString);\n        console.log(timeString);\n        setLocation({...location, workingTime: timeString});\n    }\n\n    const handleSubmit = (values) => {\n        setTimeout(() => {\n            setLocation({\n                ...location,\n                name: values.name,\n                address: values.address,\n                city: values.city,\n                locationTypeId: state.city.locationTypes[values.locationTypeId - 1].id,\n                contactPhoneNumber: values.contactPhoneNumber,\n                contactEmail: values.contactEmail,\n                price: values.price,\n                description: values.description,\n            })\n        }, 500)\n        console.log(\"Location: \", location);\n        props.onSubmit();\n    }\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={validationSchema}\n            onSubmit={props.onSubmit}\n        >\n            {formikProps => {\n                const {isSubmitting} = formikProps;\n                return (\n                    <div className=\"w-full xl:px-32 lg:px-16 md:px-3 sm:p-0 items-center min-h-screen bg-white\">\n                        <div className=\"text-center\">\n                            <h1 className=\"my-3 font-semibold font-serif text-gray-800 dark:text-gray-200\">Create\n                                new Location</h1>\n                        </div>\n                        <div className=\"w-full xl:p-10 lg:p-5 md:p-1 items-center min-h-screen bg-white\"\n                             data-aos=\"fade-up\">\n                            <div className=\"container mx-auto\">\n                                <Form className=\"max-w-full mx-auto bg-gray-200 p-16 rounded-md shadow-sm\">\n                                    <div className=\"flex flex-col w-full\">\n                                        <FastField\n                                            name=\"name\"\n                                            component={InputField}\n                                            placeholder=\"Name\"\n                                        />\n                                        <div className=\"block w-full\">\n                                            <div className=\"inline-block w-2/3\">\n                                                <FastField\n                                                    name=\"address\"\n                                                    component={InputField}\n                                                    placeholder=\"Address\"\n                                                />\n                                            </div>\n                                            <div className=\"inline-block w-1/3\">\n                                                <FastField\n                                                    name=\"city\"\n                                                    component={SelectField}\n                                                    placeholder=\"City\"\n                                                    options={CITY_OPTIONS}\n                                                />\n                                            </div>\n                                        </div>\n                                        <FastField\n                                            name=\"locationTypeId\"\n                                            component={SelectField}\n                                            placeholder=\"Location Type\"\n                                            options={locationTypeOptions}\n                                        />\n                                        <RangePicker\n                                            id=\"workingTime\"\n                                            size=\"large\"\n                                            style={{\n                                                height: \"auto\",\n                                                width: \"auto\",\n                                                cursor: \"pointer\",\n                                                borderRadius: \"3px\",\n                                                marginBottom: \"12px\",\n                                            }}\n                                            onChange={onTimeSelection}\n                                        />\n                                        <div className=\"block w-full\">\n                                            <div className=\"inline-block w-1/2\">\n                                                <FastField\n                                                    name=\"contactEmail\"\n                                                    component={InputField}\n                                                    placeholder=\"Email\"\n                                                />\n                                            </div>\n                                            <div className=\"inline-block w-1/2\">\n                                                <FastField\n                                                    name=\"contactPhoneNumber\"\n                                                    component={InputField}\n                                                    placeholder=\"Phone Number\"\n                                                />\n                                            </div>\n                                        </div>\n                                        <FastField\n                                            name=\"price\"\n                                            component={InputField}\n                                            placeholder=\"Average Price\"\n                                        />\n                                        <FastField\n                                            name=\"description\"\n                                            component={InputField}\n                                            placeholder=\"Description\"\n                                        />\n                                        <FormGroup>\n                                            {/* <Link\n                                                className=\"no-underline text-white\"\n                                                to={`/search/from_to=${initialValues.fromTo}\n                                                &city=${initialValues.cityId}\n                                                &guest=${initialValues.guest}`}\n                                            > */}\n                                            <Button\n                                                type=\"submit\"\n                                                className=\"w-full pt-1 text-white focus:outline-none\"\n                                            >\n                                                {isSubmitting && <Spinner size=\"sm\"/>}\n                                                Create\n                                            </Button>\n                                            {/* </Link> */}\n                                        </FormGroup>\n                                    </div>\n\n                                </Form>\n                            </div>\n                        </div>\n                    </div>\n                )\n            }}\n        </Formik>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}