{"ast":null,"code":"var _jsxFileName = \"/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/room.action.js\";\nimport axios from \"axios\";\nimport { GET_AVAILABLE_ROOM, GET_ROOM, GET_SPECIFIC_ROOM } from \"../actionTypes\";\nimport { setLoading } from \"./commonActions\";\nimport { Loading } from \"../../components/Global/Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = process.env.REACT_APP_API_URL; //-------------------------------------------------\n\nexport const getRoom = (dispatch, hotelId) => {\n  setLoading(dispatch, true);\n  axios.get(`${url}/customer/locations/${hotelId}`, {\n    params: {\n      join: ['locationType', 'city', 'rooms', 'serviceTypes']\n    }\n  }).then(async response => {\n    await dispatch({\n      type: GET_ROOM,\n      payload: response.data\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getSpecificRoom = (dispatch, roomId) => {\n  setLoading(dispatch, true);\n  axios.get(`${url}/customer/rooms/${roomId}`).then(async response => {\n    dispatch({\n      type: GET_SPECIFIC_ROOM,\n      payload: response.data\n    });\n  }).catch(error => {\n    console.log(error);\n  });\n};\nexport const getAvailableRoom = (dispatch, locationId, startTime, endTime) => {\n  setLoading(dispatch, true);\n  axios.get(`${url}/customer/locations/${locationId}/bookings`, {\n    params: {\n      startTime: startTime,\n      endTime: endTime\n    }\n  }).then(async response => {\n    await dispatch({\n      type: GET_AVAILABLE_ROOM,\n      payload: response.data\n    });\n    {\n      state.hotel.loading && /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 37\n      }, this);\n    }\n  }).catch(error => {});\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/room.action.js"],"names":["axios","GET_AVAILABLE_ROOM","GET_ROOM","GET_SPECIFIC_ROOM","setLoading","Loading","url","process","env","REACT_APP_API_URL","getRoom","dispatch","hotelId","get","params","join","then","response","type","payload","data","catch","error","console","log","getSpecificRoom","roomId","getAvailableRoom","locationId","startTime","endTime","state","hotel","loading"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACIC,kBADJ,EAEIC,QAFJ,EAGIC,iBAHJ,QAIO,gBAJP;AAKA,SAAQC,UAAR,QAAyB,iBAAzB;AACA,SAAQC,OAAR,QAAsB,iCAAtB;;AAEA,MAAMC,GAAG,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAxB,C,CAEA;;AACA,OAAO,MAAMC,OAAO,GAAG,CAACC,QAAD,EAAWC,OAAX,KAAuB;AAC1CR,EAAAA,UAAU,CAACO,QAAD,EAAW,IAAX,CAAV;AACAX,EAAAA,KAAK,CAACa,GAAN,CAAW,GAAEP,GAAI,uBAAsBM,OAAQ,EAA/C,EAAkD;AAC9CE,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE,CAAC,cAAD,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,cAAlC;AADF;AADsC,GAAlD,EAIGC,IAJH,CAIQ,MAAOC,QAAP,IAAoB;AACxB,UAAMN,QAAQ,CAAC;AACXO,MAAAA,IAAI,EAAEhB,QADK;AAEXiB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFP,KAAD,CAAd;AAKH,GAVD,EAWKC,KAXL,CAWYC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GAbL;AAcH,CAhBM;AAkBP,OAAO,MAAMG,eAAe,GAAG,CAACd,QAAD,EAAWe,MAAX,KAAsB;AACjDtB,EAAAA,UAAU,CAACO,QAAD,EAAW,IAAX,CAAV;AACAX,EAAAA,KAAK,CAACa,GAAN,CAAW,GAAEP,GAAI,mBAAkBoB,MAAO,EAA1C,EAA6CV,IAA7C,CAAkD,MAAOC,QAAP,IAAoB;AAClEN,IAAAA,QAAQ,CAAC;AACLO,MAAAA,IAAI,EAAEf,iBADD;AAELgB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFb,KAAD,CAAR;AAIH,GALD,EAMKC,KANL,CAMYC,KAAD,IAAW;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACH,GARL;AASH,CAXM;AAaP,OAAO,MAAMK,gBAAgB,GAAG,CAAChB,QAAD,EAAWiB,UAAX,EAAuBC,SAAvB,EAAkCC,OAAlC,KAA8C;AAC1E1B,EAAAA,UAAU,CAACO,QAAD,EAAW,IAAX,CAAV;AACAX,EAAAA,KAAK,CAACa,GAAN,CAAW,GAAEP,GAAI,uBAAsBsB,UAAW,WAAlD,EAA8D;AAC1Dd,IAAAA,MAAM,EAAE;AACJe,MAAAA,SAAS,EAAEA,SADP;AAEJC,MAAAA,OAAO,EAAEA;AAFL;AADkD,GAA9D,EAMKd,IANL,CAMU,MAAOC,QAAP,IAAoB;AACtB,UAAMN,QAAQ,CAAC;AACXO,MAAAA,IAAI,EAAEjB,kBADK;AAEXkB,MAAAA,OAAO,EAAEF,QAAQ,CAACG;AAFP,KAAD,CAAd;AAIA;AAACW,MAAAA,KAAK,CAACC,KAAN,CAAYC,OAAZ,iBAAuB,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAAvB;AAAmC;AACvC,GAZL,EAaKZ,KAbL,CAaYC,KAAD,IAAW,CACjB,CAdL;AAeH,CAjBM","sourcesContent":["import axios from \"axios\";\nimport {\n    GET_AVAILABLE_ROOM,\n    GET_ROOM,\n    GET_SPECIFIC_ROOM,\n} from \"../actionTypes\";\nimport {setLoading} from \"./commonActions\";\nimport {Loading} from \"../../components/Global/Loading\";\n\nconst url = process.env.REACT_APP_API_URL;\n\n//-------------------------------------------------\nexport const getRoom = (dispatch, hotelId) => {\n    setLoading(dispatch, true);\n    axios.get(`${url}/customer/locations/${hotelId}`, {\n        params: {\n            join: ['locationType', 'city', 'rooms', 'serviceTypes'],\n        }\n    }).then(async (response) => {\n        await dispatch({\n            type: GET_ROOM,\n            payload: response.data\n        })\n\n    })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\nexport const getSpecificRoom = (dispatch, roomId) => {\n    setLoading(dispatch, true);\n    axios.get(`${url}/customer/rooms/${roomId}`).then(async (response) => {\n        dispatch({\n            type: GET_SPECIFIC_ROOM,\n            payload: response.data\n        })\n    })\n        .catch((error) => {\n            console.log(error);\n        })\n};\n\nexport const getAvailableRoom = (dispatch, locationId, startTime, endTime) => {\n    setLoading(dispatch, true);\n    axios.get(`${url}/customer/locations/${locationId}/bookings`, {\n        params: {\n            startTime: startTime,\n            endTime: endTime,\n        }\n    })\n        .then(async (response) => {\n            await dispatch({\n                type: GET_AVAILABLE_ROOM,\n                payload: response.data\n            });\n            {state.hotel.loading && <Loading />}\n        })\n        .catch((error) => {\n        });\n};\n"]},"metadata":{},"sourceType":"module"}