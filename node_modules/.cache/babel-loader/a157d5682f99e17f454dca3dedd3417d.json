{"ast":null,"code":"import { SADMIN_SIGN_IN, SADMIN_CHECK_AUTH, SET_LOADING, CREATE_OWNER } from \"../actionTypes\";\nimport SecureLS from \"secure-ls\";\nlet ls = new SecureLS({\n  encodingType: \"aes\",\n  isCompression: false\n});\n\nlet _sAdmin_token;\n\nlet _sAdmin_id;\n\ntry {\n  _sAdmin_token = ls.get(\"sAdmin_token\");\n  _sAdmin_id = ls.get(\"sAdmin_id\");\n} catch (error) {}\n\nconst initialState = {\n  isAuthenticated: _sAdmin_token !== null && _sAdmin_token !== \"null\" && _sAdmin_token !== \"\",\n  token: _sAdmin_token || null,\n  user_id: _sAdmin_id || null,\n  loading: false,\n  success: null,\n  errors: null\n};\nexport default function sAdmin(state = initialState, action) {\n  switch (action.type) {\n    case SADMIN_SIGN_IN:\n      {\n        return { ...state,\n          success: !!action.payload.success,\n          isAuthenticated: !!action.payload.success,\n          token: action.payload.success ? action.payload.accessToken : null,\n          user_id: action.payload.success ? action.payload.user.id : null,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case SADMIN_CHECK_AUTH:\n      {\n        return { ...state,\n          isAuthenticated: action.payload.isAuthenticated,\n          token: action.payload.accessToken,\n          user_id: action.payload.user.id\n        };\n      }\n\n    case CREATE_OWNER:\n      {\n        return { ...state,\n          success: action.payload.success,\n          errors: action.payload.success ? null : action.payload.errors\n        };\n      }\n\n    case SET_LOADING:\n      {\n        return { ...state,\n          loading: action.payload\n        };\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/reducers/sAdmin.reducer.js"],"names":["SADMIN_SIGN_IN","SADMIN_CHECK_AUTH","SET_LOADING","CREATE_OWNER","SecureLS","ls","encodingType","isCompression","_sAdmin_token","_sAdmin_id","get","error","initialState","isAuthenticated","token","user_id","loading","success","errors","sAdmin","state","action","type","payload","accessToken","user","id"],"mappings":"AAAA,SAAQA,cAAR,EAAwBC,iBAAxB,EAA2CC,WAA3C,EAAwDC,YAAxD,QAA2E,gBAA3E;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,IAAIC,EAAE,GAAG,IAAID,QAAJ,CAAa;AAAEE,EAAAA,YAAY,EAAE,KAAhB;AAAuBC,EAAAA,aAAa,EAAE;AAAtC,CAAb,CAAT;;AACA,IAAIC,aAAJ;;AACA,IAAIC,UAAJ;;AACA,IAAI;AACAD,EAAAA,aAAa,GAAGH,EAAE,CAACK,GAAH,CAAO,cAAP,CAAhB;AACAD,EAAAA,UAAU,GAAGJ,EAAE,CAACK,GAAH,CAAO,WAAP,CAAb;AACH,CAHD,CAGE,OAAOC,KAAP,EAAc,CAAE;;AAClB,MAAMC,YAAY,GAAG;AACjBC,EAAAA,eAAe,EACXL,aAAa,KAAK,IAAlB,IAA0BA,aAAa,KAAK,MAA5C,IAAqDA,aAAa,KAAK,EAF1D;AAGjBM,EAAAA,KAAK,EAAEN,aAAa,IAAI,IAHP;AAIjBO,EAAAA,OAAO,EAAEN,UAAU,IAAI,IAJN;AAKjBO,EAAAA,OAAO,EAAE,KALQ;AAMjBC,EAAAA,OAAO,EAAE,IANQ;AAOjBC,EAAAA,MAAM,EAAE;AAPS,CAArB;AAUA,eAAe,SAASC,MAAT,CAAgBC,KAAK,GAAGR,YAAxB,EAAsCS,MAAtC,EAA8C;AACzD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKtB,cAAL;AAAqB;AACjB,eAAO,EACH,GAAGoB,KADA;AAEHH,UAAAA,OAAO,EAAE,CAAC,CAACI,MAAM,CAACE,OAAP,CAAeN,OAFvB;AAGHJ,UAAAA,eAAe,EAAE,CAAC,CAACQ,MAAM,CAACE,OAAP,CAAeN,OAH/B;AAIHH,UAAAA,KAAK,EAAEO,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyBI,MAAM,CAACE,OAAP,CAAeC,WAAxC,GAAsD,IAJ1D;AAKHT,UAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyBI,MAAM,CAACE,OAAP,CAAeE,IAAf,CAAoBC,EAA7C,GAAkD,IALxD;AAMHR,UAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyB,IAAzB,GAAgCI,MAAM,CAACE,OAAP,CAAeL;AANpD,SAAP;AAQH;;AACD,SAAKjB,iBAAL;AAAwB;AACpB,eAAO,EACH,GAAGmB,KADA;AAEHP,UAAAA,eAAe,EAAEQ,MAAM,CAACE,OAAP,CAAeV,eAF7B;AAGHC,UAAAA,KAAK,EAAEO,MAAM,CAACE,OAAP,CAAeC,WAHnB;AAIHT,UAAAA,OAAO,EAAEM,MAAM,CAACE,OAAP,CAAeE,IAAf,CAAoBC;AAJ1B,SAAP;AAMH;;AACD,SAAKvB,YAAL;AAAmB;AACf,eAAO,EACH,GAAGiB,KADA;AAEHH,UAAAA,OAAO,EAAEI,MAAM,CAACE,OAAP,CAAeN,OAFrB;AAGHC,UAAAA,MAAM,EAAEG,MAAM,CAACE,OAAP,CAAeN,OAAf,GAAyB,IAAzB,GAAgCI,MAAM,CAACE,OAAP,CAAeL;AAHpD,SAAP;AAKH;;AACD,SAAKhB,WAAL;AAAkB;AACd,eAAO,EACH,GAAGkB,KADA;AAEHJ,UAAAA,OAAO,EAAEK,MAAM,CAACE;AAFb,SAAP;AAIH;;AACD;AACI,aAAOH,KAAP;AAjCR;AAmCH","sourcesContent":["import {SADMIN_SIGN_IN, SADMIN_CHECK_AUTH, SET_LOADING, CREATE_OWNER} from \"../actionTypes\";\nimport SecureLS from \"secure-ls\";\n\nlet ls = new SecureLS({ encodingType: \"aes\", isCompression: false });\nlet _sAdmin_token;\nlet _sAdmin_id;\ntry {\n    _sAdmin_token = ls.get(\"sAdmin_token\");\n    _sAdmin_id = ls.get(\"sAdmin_id\");\n} catch (error) {}\nconst initialState = {\n    isAuthenticated:\n        _sAdmin_token !== null && _sAdmin_token !== \"null\" &&_sAdmin_token !== \"\",\n    token: _sAdmin_token || null,\n    user_id: _sAdmin_id || null,\n    loading: false,\n    success: null,\n    errors: null\n};\n\nexport default function sAdmin(state = initialState, action) {\n    switch (action.type) {\n        case SADMIN_SIGN_IN: {\n            return {\n                ...state,\n                success: !!action.payload.success,\n                isAuthenticated: !!action.payload.success,\n                token: action.payload.success ? action.payload.accessToken : null,\n                user_id: action.payload.success ? action.payload.user.id : null,\n                errors: action.payload.success ? null : action.payload.errors\n            };\n        }\n        case SADMIN_CHECK_AUTH: {\n            return {\n                ...state,\n                isAuthenticated: action.payload.isAuthenticated,\n                token: action.payload.accessToken,\n                user_id: action.payload.user.id,\n            };\n        }\n        case CREATE_OWNER: {\n            return {\n                ...state,\n                success: action.payload.success,\n                errors: action.payload.success ? null : action.payload.errors\n            };\n        }\n        case SET_LOADING: {\n            return {\n                ...state,\n                loading: action.payload\n            };\n        }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}