{"ast":null,"code":"import axios from \"axios\";\nimport { GET_USER, GET_BOOKING_HISTORIES, UPDATE_USER_INFO, UPDATE_USER_PASSWORD } from \"../actionTypes\";\nimport { setLoading } from \"./commonActions\";\nconst url = process.env.REACT_APP_API_URL; //-----------------------------------------\n\nexport const getUser = (dispatch, token) => {\n  axios(`${url}/customer/users/me`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_USER,\n      payload: {\n        user: response.data\n      }\n    });\n  }).catch(error => {});\n}; // -----------------------------------------\n\nexport const getBookingHistories = (dispatch, token) => {\n  axios(`${url}/customer/booking-histories`, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: GET_BOOKING_HISTORIES,\n      payload: response.data.results\n    });\n  }).catch(error => {});\n}; // -----------------------------------------\n\nexport const updateUserInfo = (dispatch, token, userInfo) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/customer/users/me`, {\n    email: userInfo.email\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_USER_INFO,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, true);\n  });\n}; // -----------------------------------------\n\nexport const updateUserPassword = (dispatch, token, {\n  password,\n  newPassword,\n  confirmNewPassword\n}) => {\n  setLoading(dispatch, true);\n  axios.put(`${url}/customer/users/me/update-password`, {\n    password,\n    newPassword,\n    confirmNewPassword\n  }, {\n    headers: {\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    dispatch({\n      type: UPDATE_USER_PASSWORD,\n      payload: response.data.data\n    });\n    setLoading(dispatch, false);\n  }).catch(error => {\n    setLoading(dispatch, true);\n  });\n};","map":{"version":3,"sources":["/Users/lephuochoang/Hoc/Project/vibo.com/booking/web/src/redux/actions/user.action.js"],"names":["axios","GET_USER","GET_BOOKING_HISTORIES","UPDATE_USER_INFO","UPDATE_USER_PASSWORD","setLoading","url","process","env","REACT_APP_API_URL","getUser","dispatch","token","headers","Authorization","then","response","type","payload","user","data","catch","error","getBookingHistories","results","updateUserInfo","userInfo","put","email","updateUserPassword","password","newPassword","confirmNewPassword"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport {\n    GET_USER,\n    GET_BOOKING_HISTORIES,\n    UPDATE_USER_INFO,\n    UPDATE_USER_PASSWORD\n} from \"../actionTypes\";\nimport {setLoading} from \"./commonActions\";\n\nconst url = process.env.REACT_APP_API_URL;\n\n//-----------------------------------------\n\nexport const getUser = (dispatch, token) => {\n    axios(`${url}/customer/users/me`, {\n        headers: {Authorization: `Bearer ${token}`}\n    })\n        .then((response) => {\n            dispatch({\n                type: GET_USER,\n                payload: {\n                    user: response.data\n                }\n            });\n        })\n        .catch((error) => {\n        });\n};\n// -----------------------------------------\nexport const getBookingHistories = (dispatch, token) => {\n    axios(`${url}/customer/booking-histories`, {\n        headers: {Authorization: `Bearer ${token}`}\n    })\n        .then((response) => {\n            dispatch({\n                type: GET_BOOKING_HISTORIES,\n                payload: response.data.results\n            });\n        })\n        .catch((error) => {\n        });\n};\n// -----------------------------------------\n\nexport const updateUserInfo = (dispatch, token, userInfo) => {\n    setLoading(dispatch, true);\n    axios\n        .put(\n            `${url}/customer/users/me`,\n            {\n                email: userInfo.email,\n            },\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            }\n        )\n        .then((response) => {\n            dispatch({\n                type: UPDATE_USER_INFO,\n                payload: response.data.data\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n            setLoading(dispatch, true);\n        });\n};\n// -----------------------------------------\n\nexport const updateUserPassword = (\n    dispatch,\n    token,\n    {password, newPassword, confirmNewPassword}\n) => {\n    setLoading(dispatch, true);\n\n    axios\n        .put(\n            `${url}/customer/users/me/update-password`,\n            {\n                password,\n                newPassword,\n                confirmNewPassword\n            },\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            }\n        )\n        .then((response) => {\n            dispatch({\n                type: UPDATE_USER_PASSWORD,\n                payload: response.data.data\n            });\n            setLoading(dispatch, false);\n        })\n        .catch((error) => {\n            setLoading(dispatch, true);\n        });\n};\n"]},"metadata":{},"sourceType":"module"}